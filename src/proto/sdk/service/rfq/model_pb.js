// source: sdk/service/rfq/model.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var sdk_service_rfqmm_api_pb = require('../../../sdk/service/rfqmm/api_pb.js');
goog.object.extend(proto, sdk_service_rfqmm_api_pb);
goog.exportSymbol('proto.rfq.MarketMaker', null, global);
goog.exportSymbol('proto.rfq.OrderStatus', null, global);
goog.exportSymbol('proto.rfq.PendingOrder', null, global);
goog.exportSymbol('proto.rfq.UserOrder', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.PendingOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rfq.PendingOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.PendingOrder.displayName = 'proto.rfq.PendingOrder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.UserOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rfq.UserOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.UserOrder.displayName = 'proto.rfq.UserOrder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.MarketMaker = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rfq.MarketMaker, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.MarketMaker.displayName = 'proto.rfq.MarketMaker';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.PendingOrder.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.PendingOrder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.PendingOrder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.PendingOrder.toObject = function(includeInstance, msg) {
  var f, obj = {
    quote: (f = msg.getQuote()) && sdk_service_rfqmm_api_pb.Quote.toObject(includeInstance, f),
    srcDepositTxHash: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dstNative: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    execMsgCallData: msg.getExecMsgCallData_asB64(),
    quoteSig: jspb.Message.getFieldWithDefault(msg, 5, ""),
    status: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.PendingOrder}
 */
proto.rfq.PendingOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.PendingOrder;
  return proto.rfq.PendingOrder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.PendingOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.PendingOrder}
 */
proto.rfq.PendingOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sdk_service_rfqmm_api_pb.Quote;
      reader.readMessage(value,sdk_service_rfqmm_api_pb.Quote.deserializeBinaryFromReader);
      msg.setQuote(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcDepositTxHash(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDstNative(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setExecMsgCallData(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteSig(value);
      break;
    case 6:
      var value = /** @type {!proto.rfq.OrderStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.PendingOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.PendingOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.PendingOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.PendingOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuote();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sdk_service_rfqmm_api_pb.Quote.serializeBinaryToWriter
    );
  }
  f = message.getSrcDepositTxHash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDstNative();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getExecMsgCallData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getQuoteSig();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional service.rfqmm.Quote quote = 1;
 * @return {?proto.service.rfqmm.Quote}
 */
proto.rfq.PendingOrder.prototype.getQuote = function() {
  return /** @type{?proto.service.rfqmm.Quote} */ (
    jspb.Message.getWrapperField(this, sdk_service_rfqmm_api_pb.Quote, 1));
};


/**
 * @param {?proto.service.rfqmm.Quote|undefined} value
 * @return {!proto.rfq.PendingOrder} returns this
*/
proto.rfq.PendingOrder.prototype.setQuote = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rfq.PendingOrder} returns this
 */
proto.rfq.PendingOrder.prototype.clearQuote = function() {
  return this.setQuote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rfq.PendingOrder.prototype.hasQuote = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string src_deposit_tx_hash = 2;
 * @return {string}
 */
proto.rfq.PendingOrder.prototype.getSrcDepositTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.PendingOrder} returns this
 */
proto.rfq.PendingOrder.prototype.setSrcDepositTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool dst_native = 3;
 * @return {boolean}
 */
proto.rfq.PendingOrder.prototype.getDstNative = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rfq.PendingOrder} returns this
 */
proto.rfq.PendingOrder.prototype.setDstNative = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bytes exec_msg_call_data = 4;
 * @return {!(string|Uint8Array)}
 */
proto.rfq.PendingOrder.prototype.getExecMsgCallData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes exec_msg_call_data = 4;
 * This is a type-conversion wrapper around `getExecMsgCallData()`
 * @return {string}
 */
proto.rfq.PendingOrder.prototype.getExecMsgCallData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getExecMsgCallData()));
};


/**
 * optional bytes exec_msg_call_data = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getExecMsgCallData()`
 * @return {!Uint8Array}
 */
proto.rfq.PendingOrder.prototype.getExecMsgCallData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getExecMsgCallData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.rfq.PendingOrder} returns this
 */
proto.rfq.PendingOrder.prototype.setExecMsgCallData = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional string quote_sig = 5;
 * @return {string}
 */
proto.rfq.PendingOrder.prototype.getQuoteSig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.PendingOrder} returns this
 */
proto.rfq.PendingOrder.prototype.setQuoteSig = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional OrderStatus status = 6;
 * @return {!proto.rfq.OrderStatus}
 */
proto.rfq.PendingOrder.prototype.getStatus = function() {
  return /** @type {!proto.rfq.OrderStatus} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.rfq.OrderStatus} value
 * @return {!proto.rfq.PendingOrder} returns this
 */
proto.rfq.PendingOrder.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.UserOrder.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.UserOrder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.UserOrder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.UserOrder.toObject = function(includeInstance, msg) {
  var f, obj = {
    quote: (f = msg.getQuote()) && sdk_service_rfqmm_api_pb.Quote.toObject(includeInstance, f),
    dstNative: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    lastUpdated: jspb.Message.getFieldWithDefault(msg, 3, 0),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    mmId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    mmAddr: jspb.Message.getFieldWithDefault(msg, 6, ""),
    srcDepositTxHash: jspb.Message.getFieldWithDefault(msg, 7, ""),
    dstTransferTxHash: jspb.Message.getFieldWithDefault(msg, 8, ""),
    srcReleaseTxHash: jspb.Message.getFieldWithDefault(msg, 9, ""),
    dstRefundInitTxHash: jspb.Message.getFieldWithDefault(msg, 10, ""),
    srcRefundTxHash: jspb.Message.getFieldWithDefault(msg, 11, ""),
    createdTime: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.UserOrder}
 */
proto.rfq.UserOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.UserOrder;
  return proto.rfq.UserOrder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.UserOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.UserOrder}
 */
proto.rfq.UserOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sdk_service_rfqmm_api_pb.Quote;
      reader.readMessage(value,sdk_service_rfqmm_api_pb.Quote.deserializeBinaryFromReader);
      msg.setQuote(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDstNative(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastUpdated(value);
      break;
    case 4:
      var value = /** @type {!proto.rfq.OrderStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMmId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMmAddr(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcDepositTxHash(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDstTransferTxHash(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcReleaseTxHash(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDstRefundInitTxHash(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcRefundTxHash(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.UserOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.UserOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.UserOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.UserOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuote();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sdk_service_rfqmm_api_pb.Quote.serializeBinaryToWriter
    );
  }
  f = message.getDstNative();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getLastUpdated();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getMmId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMmAddr();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSrcDepositTxHash();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDstTransferTxHash();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSrcReleaseTxHash();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDstRefundInitTxHash();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSrcRefundTxHash();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCreatedTime();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
};


/**
 * optional service.rfqmm.Quote quote = 1;
 * @return {?proto.service.rfqmm.Quote}
 */
proto.rfq.UserOrder.prototype.getQuote = function() {
  return /** @type{?proto.service.rfqmm.Quote} */ (
    jspb.Message.getWrapperField(this, sdk_service_rfqmm_api_pb.Quote, 1));
};


/**
 * @param {?proto.service.rfqmm.Quote|undefined} value
 * @return {!proto.rfq.UserOrder} returns this
*/
proto.rfq.UserOrder.prototype.setQuote = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rfq.UserOrder} returns this
 */
proto.rfq.UserOrder.prototype.clearQuote = function() {
  return this.setQuote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rfq.UserOrder.prototype.hasQuote = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool dst_native = 2;
 * @return {boolean}
 */
proto.rfq.UserOrder.prototype.getDstNative = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rfq.UserOrder} returns this
 */
proto.rfq.UserOrder.prototype.setDstNative = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int64 last_updated = 3;
 * @return {number}
 */
proto.rfq.UserOrder.prototype.getLastUpdated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rfq.UserOrder} returns this
 */
proto.rfq.UserOrder.prototype.setLastUpdated = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional OrderStatus status = 4;
 * @return {!proto.rfq.OrderStatus}
 */
proto.rfq.UserOrder.prototype.getStatus = function() {
  return /** @type {!proto.rfq.OrderStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.rfq.OrderStatus} value
 * @return {!proto.rfq.UserOrder} returns this
 */
proto.rfq.UserOrder.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string mm_id = 5;
 * @return {string}
 */
proto.rfq.UserOrder.prototype.getMmId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.UserOrder} returns this
 */
proto.rfq.UserOrder.prototype.setMmId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string mm_addr = 6;
 * @return {string}
 */
proto.rfq.UserOrder.prototype.getMmAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.UserOrder} returns this
 */
proto.rfq.UserOrder.prototype.setMmAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string src_deposit_tx_hash = 7;
 * @return {string}
 */
proto.rfq.UserOrder.prototype.getSrcDepositTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.UserOrder} returns this
 */
proto.rfq.UserOrder.prototype.setSrcDepositTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string dst_transfer_tx_hash = 8;
 * @return {string}
 */
proto.rfq.UserOrder.prototype.getDstTransferTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.UserOrder} returns this
 */
proto.rfq.UserOrder.prototype.setDstTransferTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string src_release_tx_hash = 9;
 * @return {string}
 */
proto.rfq.UserOrder.prototype.getSrcReleaseTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.UserOrder} returns this
 */
proto.rfq.UserOrder.prototype.setSrcReleaseTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string dst_refund_init_tx_hash = 10;
 * @return {string}
 */
proto.rfq.UserOrder.prototype.getDstRefundInitTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.UserOrder} returns this
 */
proto.rfq.UserOrder.prototype.setDstRefundInitTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string src_refund_tx_hash = 11;
 * @return {string}
 */
proto.rfq.UserOrder.prototype.getSrcRefundTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.UserOrder} returns this
 */
proto.rfq.UserOrder.prototype.setSrcRefundTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int64 created_time = 12;
 * @return {number}
 */
proto.rfq.UserOrder.prototype.getCreatedTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.rfq.UserOrder} returns this
 */
proto.rfq.UserOrder.prototype.setCreatedTime = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.MarketMaker.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.MarketMaker.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.MarketMaker} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.MarketMaker.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.MarketMaker}
 */
proto.rfq.MarketMaker.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.MarketMaker;
  return proto.rfq.MarketMaker.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.MarketMaker} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.MarketMaker}
 */
proto.rfq.MarketMaker.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.MarketMaker.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.MarketMaker.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.MarketMaker} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.MarketMaker.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rfq.MarketMaker.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.MarketMaker} returns this
 */
proto.rfq.MarketMaker.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.rfq.MarketMaker.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.MarketMaker} returns this
 */
proto.rfq.MarketMaker.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.rfq.OrderStatus = {
  STATUS_PENDING: 0,
  STATUS_SRC_DEPOSITED: 10,
  STATUS_MM_REJECTED: 20,
  STATUS_MM_DST_EXECUTED: 30,
  STATUS_DST_TRANSFERRED: 40,
  STATUS_MM_SRC_EXECUTED: 50,
  STATUS_REFUND_INITIATED: 60,
  STATUS_SRC_RELEASED: 70,
  STATUS_REFUNDED: 80
};

goog.object.extend(exports, proto.rfq);
