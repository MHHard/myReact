// source: sdk/common/chain.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.common.ChainConfig', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.common.ChainConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.common.ChainConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.common.ChainConfig.displayName = 'proto.common.ChainConfig';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.common.ChainConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.common.ChainConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.common.ChainConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.ChainConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    gateway: jspb.Message.getFieldWithDefault(msg, 3, ""),
    blockInterval: jspb.Message.getFieldWithDefault(msg, 4, 0),
    blockDelay: jspb.Message.getFieldWithDefault(msg, 5, 0),
    maxBlockDelta: jspb.Message.getFieldWithDefault(msg, 6, 0),
    forwardBlockDelay: jspb.Message.getFieldWithDefault(msg, 7, 0),
    gasLimit: jspb.Message.getFieldWithDefault(msg, 8, 0),
    addGasEstimateRatio: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    addGasGwei: jspb.Message.getFieldWithDefault(msg, 10, 0),
    minGasGwei: jspb.Message.getFieldWithDefault(msg, 11, 0),
    maxGasGwei: jspb.Message.getFieldWithDefault(msg, 12, 0),
    forceGasGwei: jspb.Message.getFieldWithDefault(msg, 13, ""),
    maxFeePerGasGwei: jspb.Message.getFieldWithDefault(msg, 14, 0),
    maxPriorityFeePerGasGwei: jspb.Message.getFieldWithDefault(msg, 15, 0),
    proxyPort: jspb.Message.getFieldWithDefault(msg, 16, 0),
    cBridge: jspb.Message.getFieldWithDefault(msg, 17, ""),
    oTVault: jspb.Message.getFieldWithDefault(msg, 18, ""),
    pTBridge: jspb.Message.getFieldWithDefault(msg, 19, ""),
    oTVault2: jspb.Message.getFieldWithDefault(msg, 20, ""),
    pTBridge2: jspb.Message.getFieldWithDefault(msg, 21, ""),
    wdInbox: jspb.Message.getFieldWithDefault(msg, 22, ""),
    msgBus: jspb.Message.getFieldWithDefault(msg, 23, ""),
    xferAgt: jspb.Message.getFieldWithDefault(msg, 24, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.common.ChainConfig}
 */
proto.common.ChainConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.common.ChainConfig;
  return proto.common.ChainConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.common.ChainConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.common.ChainConfig}
 */
proto.common.ChainConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGateway(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockInterval(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockDelay(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxBlockDelta(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setForwardBlockDelay(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGasLimit(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAddGasEstimateRatio(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAddGasGwei(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMinGasGwei(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxGasGwei(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setForceGasGwei(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxFeePerGasGwei(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxPriorityFeePerGasGwei(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setProxyPort(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setCBridge(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setOTVault(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setPTBridge(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setOTVault2(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setPTBridge2(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setWdInbox(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsgBus(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setXferAgt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.common.ChainConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.common.ChainConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.common.ChainConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.common.ChainConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGateway();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBlockInterval();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getBlockDelay();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getMaxBlockDelta();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getForwardBlockDelay();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getGasLimit();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getAddGasEstimateRatio();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getAddGasGwei();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getMinGasGwei();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getMaxGasGwei();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getForceGasGwei();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getMaxFeePerGasGwei();
  if (f !== 0) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = message.getMaxPriorityFeePerGasGwei();
  if (f !== 0) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = message.getProxyPort();
  if (f !== 0) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = message.getCBridge();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getOTVault();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getPTBridge();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getOTVault2();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getPTBridge2();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getWdInbox();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getMsgBus();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getXferAgt();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.common.ChainConfig.prototype.getChainId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setChainId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.common.ChainConfig.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string gateway = 3;
 * @return {string}
 */
proto.common.ChainConfig.prototype.getGateway = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setGateway = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 block_interval = 4;
 * @return {number}
 */
proto.common.ChainConfig.prototype.getBlockInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setBlockInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 block_delay = 5;
 * @return {number}
 */
proto.common.ChainConfig.prototype.getBlockDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setBlockDelay = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 max_block_delta = 6;
 * @return {number}
 */
proto.common.ChainConfig.prototype.getMaxBlockDelta = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setMaxBlockDelta = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 forward_block_delay = 7;
 * @return {number}
 */
proto.common.ChainConfig.prototype.getForwardBlockDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setForwardBlockDelay = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 gas_limit = 8;
 * @return {number}
 */
proto.common.ChainConfig.prototype.getGasLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setGasLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional float add_gas_estimate_ratio = 9;
 * @return {number}
 */
proto.common.ChainConfig.prototype.getAddGasEstimateRatio = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setAddGasEstimateRatio = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional uint64 add_gas_gwei = 10;
 * @return {number}
 */
proto.common.ChainConfig.prototype.getAddGasGwei = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setAddGasGwei = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint64 min_gas_gwei = 11;
 * @return {number}
 */
proto.common.ChainConfig.prototype.getMinGasGwei = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setMinGasGwei = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional uint64 max_gas_gwei = 12;
 * @return {number}
 */
proto.common.ChainConfig.prototype.getMaxGasGwei = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setMaxGasGwei = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string force_gas_gwei = 13;
 * @return {string}
 */
proto.common.ChainConfig.prototype.getForceGasGwei = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setForceGasGwei = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional uint64 max_fee_per_gas_gwei = 14;
 * @return {number}
 */
proto.common.ChainConfig.prototype.getMaxFeePerGasGwei = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setMaxFeePerGasGwei = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional uint64 max_priority_fee_per_gas_gwei = 15;
 * @return {number}
 */
proto.common.ChainConfig.prototype.getMaxPriorityFeePerGasGwei = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setMaxPriorityFeePerGasGwei = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int64 proxy_port = 16;
 * @return {number}
 */
proto.common.ChainConfig.prototype.getProxyPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setProxyPort = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional string c_bridge = 17;
 * @return {string}
 */
proto.common.ChainConfig.prototype.getCBridge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setCBridge = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string o_t_vault = 18;
 * @return {string}
 */
proto.common.ChainConfig.prototype.getOTVault = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setOTVault = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string p_t_bridge = 19;
 * @return {string}
 */
proto.common.ChainConfig.prototype.getPTBridge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setPTBridge = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string o_t_vault2 = 20;
 * @return {string}
 */
proto.common.ChainConfig.prototype.getOTVault2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setOTVault2 = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string p_t_bridge2 = 21;
 * @return {string}
 */
proto.common.ChainConfig.prototype.getPTBridge2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setPTBridge2 = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string wd_inbox = 22;
 * @return {string}
 */
proto.common.ChainConfig.prototype.getWdInbox = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setWdInbox = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string msg_bus = 23;
 * @return {string}
 */
proto.common.ChainConfig.prototype.getMsgBus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setMsgBus = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string xfer_agt = 24;
 * @return {string}
 */
proto.common.ChainConfig.prototype.getXferAgt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.common.ChainConfig} returns this
 */
proto.common.ChainConfig.prototype.setXferAgt = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


goog.object.extend(exports, proto.common);
