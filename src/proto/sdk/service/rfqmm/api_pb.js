// source: sdk/service/rfqmm/api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var sdk_common_token_pb = require('../../../sdk/common/token_pb.js');
goog.object.extend(proto, sdk_common_token_pb);
var sdk_common_error_pb = require('../../../sdk/common/error_pb.js');
goog.object.extend(proto, sdk_common_error_pb);
var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
goog.exportSymbol('proto.service.rfqmm.Config', null, global);
goog.exportSymbol('proto.service.rfqmm.DstTransferRequest', null, global);
goog.exportSymbol('proto.service.rfqmm.ErrCode', null, global);
goog.exportSymbol('proto.service.rfqmm.Price', null, global);
goog.exportSymbol('proto.service.rfqmm.PriceRequest', null, global);
goog.exportSymbol('proto.service.rfqmm.PriceResponse', null, global);
goog.exportSymbol('proto.service.rfqmm.Quote', null, global);
goog.exportSymbol('proto.service.rfqmm.QuoteRequest', null, global);
goog.exportSymbol('proto.service.rfqmm.QuoteResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.rfqmm.PriceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.rfqmm.PriceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.rfqmm.PriceRequest.displayName = 'proto.service.rfqmm.PriceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.rfqmm.PriceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.rfqmm.PriceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.rfqmm.PriceResponse.displayName = 'proto.service.rfqmm.PriceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.rfqmm.QuoteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.rfqmm.QuoteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.rfqmm.QuoteRequest.displayName = 'proto.service.rfqmm.QuoteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.rfqmm.QuoteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.rfqmm.QuoteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.rfqmm.QuoteResponse.displayName = 'proto.service.rfqmm.QuoteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.rfqmm.Config = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.service.rfqmm.Config.repeatedFields_, null);
};
goog.inherits(proto.service.rfqmm.Config, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.rfqmm.Config.displayName = 'proto.service.rfqmm.Config';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.rfqmm.Price = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.rfqmm.Price, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.rfqmm.Price.displayName = 'proto.service.rfqmm.Price';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.rfqmm.Quote = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.rfqmm.Quote, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.rfqmm.Quote.displayName = 'proto.service.rfqmm.Quote';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.service.rfqmm.DstTransferRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.service.rfqmm.DstTransferRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.service.rfqmm.DstTransferRequest.displayName = 'proto.service.rfqmm.DstTransferRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.rfqmm.PriceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.service.rfqmm.PriceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.rfqmm.PriceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.rfqmm.PriceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    srcToken: (f = msg.getSrcToken()) && sdk_common_token_pb.Token.toObject(includeInstance, f),
    dstToken: (f = msg.getDstToken()) && sdk_common_token_pb.Token.toObject(includeInstance, f),
    srcAmount: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dstAmount: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dstNative: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.rfqmm.PriceRequest}
 */
proto.service.rfqmm.PriceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.rfqmm.PriceRequest;
  return proto.service.rfqmm.PriceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.rfqmm.PriceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.rfqmm.PriceRequest}
 */
proto.service.rfqmm.PriceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sdk_common_token_pb.Token;
      reader.readMessage(value,sdk_common_token_pb.Token.deserializeBinaryFromReader);
      msg.setSrcToken(value);
      break;
    case 2:
      var value = new sdk_common_token_pb.Token;
      reader.readMessage(value,sdk_common_token_pb.Token.deserializeBinaryFromReader);
      msg.setDstToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcAmount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDstAmount(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDstNative(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.rfqmm.PriceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.rfqmm.PriceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.rfqmm.PriceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.rfqmm.PriceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcToken();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sdk_common_token_pb.Token.serializeBinaryToWriter
    );
  }
  f = message.getDstToken();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sdk_common_token_pb.Token.serializeBinaryToWriter
    );
  }
  f = message.getSrcAmount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDstAmount();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDstNative();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional common.Token src_token = 1;
 * @return {?proto.common.Token}
 */
proto.service.rfqmm.PriceRequest.prototype.getSrcToken = function() {
  return /** @type{?proto.common.Token} */ (
    jspb.Message.getWrapperField(this, sdk_common_token_pb.Token, 1));
};


/**
 * @param {?proto.common.Token|undefined} value
 * @return {!proto.service.rfqmm.PriceRequest} returns this
*/
proto.service.rfqmm.PriceRequest.prototype.setSrcToken = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.rfqmm.PriceRequest} returns this
 */
proto.service.rfqmm.PriceRequest.prototype.clearSrcToken = function() {
  return this.setSrcToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.rfqmm.PriceRequest.prototype.hasSrcToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.Token dst_token = 2;
 * @return {?proto.common.Token}
 */
proto.service.rfqmm.PriceRequest.prototype.getDstToken = function() {
  return /** @type{?proto.common.Token} */ (
    jspb.Message.getWrapperField(this, sdk_common_token_pb.Token, 2));
};


/**
 * @param {?proto.common.Token|undefined} value
 * @return {!proto.service.rfqmm.PriceRequest} returns this
*/
proto.service.rfqmm.PriceRequest.prototype.setDstToken = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.rfqmm.PriceRequest} returns this
 */
proto.service.rfqmm.PriceRequest.prototype.clearDstToken = function() {
  return this.setDstToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.rfqmm.PriceRequest.prototype.hasDstToken = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string src_amount = 3;
 * @return {string}
 */
proto.service.rfqmm.PriceRequest.prototype.getSrcAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.rfqmm.PriceRequest} returns this
 */
proto.service.rfqmm.PriceRequest.prototype.setSrcAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string dst_amount = 4;
 * @return {string}
 */
proto.service.rfqmm.PriceRequest.prototype.getDstAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.rfqmm.PriceRequest} returns this
 */
proto.service.rfqmm.PriceRequest.prototype.setDstAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool dst_native = 5;
 * @return {boolean}
 */
proto.service.rfqmm.PriceRequest.prototype.getDstNative = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.rfqmm.PriceRequest} returns this
 */
proto.service.rfqmm.PriceRequest.prototype.setDstNative = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.rfqmm.PriceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.service.rfqmm.PriceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.rfqmm.PriceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.rfqmm.PriceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && sdk_common_error_pb.Err.toObject(includeInstance, f),
    price: (f = msg.getPrice()) && proto.service.rfqmm.Price.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.rfqmm.PriceResponse}
 */
proto.service.rfqmm.PriceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.rfqmm.PriceResponse;
  return proto.service.rfqmm.PriceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.rfqmm.PriceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.rfqmm.PriceResponse}
 */
proto.service.rfqmm.PriceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sdk_common_error_pb.Err;
      reader.readMessage(value,sdk_common_error_pb.Err.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.service.rfqmm.Price;
      reader.readMessage(value,proto.service.rfqmm.Price.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.rfqmm.PriceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.rfqmm.PriceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.rfqmm.PriceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.rfqmm.PriceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sdk_common_error_pb.Err.serializeBinaryToWriter
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.service.rfqmm.Price.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.Err err = 1;
 * @return {?proto.common.Err}
 */
proto.service.rfqmm.PriceResponse.prototype.getErr = function() {
  return /** @type{?proto.common.Err} */ (
    jspb.Message.getWrapperField(this, sdk_common_error_pb.Err, 1));
};


/**
 * @param {?proto.common.Err|undefined} value
 * @return {!proto.service.rfqmm.PriceResponse} returns this
*/
proto.service.rfqmm.PriceResponse.prototype.setErr = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.rfqmm.PriceResponse} returns this
 */
proto.service.rfqmm.PriceResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.rfqmm.PriceResponse.prototype.hasErr = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Price price = 2;
 * @return {?proto.service.rfqmm.Price}
 */
proto.service.rfqmm.PriceResponse.prototype.getPrice = function() {
  return /** @type{?proto.service.rfqmm.Price} */ (
    jspb.Message.getWrapperField(this, proto.service.rfqmm.Price, 2));
};


/**
 * @param {?proto.service.rfqmm.Price|undefined} value
 * @return {!proto.service.rfqmm.PriceResponse} returns this
*/
proto.service.rfqmm.PriceResponse.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.rfqmm.PriceResponse} returns this
 */
proto.service.rfqmm.PriceResponse.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.rfqmm.PriceResponse.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.rfqmm.QuoteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.service.rfqmm.QuoteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.rfqmm.QuoteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.rfqmm.QuoteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    price: (f = msg.getPrice()) && proto.service.rfqmm.Price.toObject(includeInstance, f),
    quote: (f = msg.getQuote()) && proto.service.rfqmm.Quote.toObject(includeInstance, f),
    dstNative: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.rfqmm.QuoteRequest}
 */
proto.service.rfqmm.QuoteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.rfqmm.QuoteRequest;
  return proto.service.rfqmm.QuoteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.rfqmm.QuoteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.rfqmm.QuoteRequest}
 */
proto.service.rfqmm.QuoteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.service.rfqmm.Price;
      reader.readMessage(value,proto.service.rfqmm.Price.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 2:
      var value = new proto.service.rfqmm.Quote;
      reader.readMessage(value,proto.service.rfqmm.Quote.deserializeBinaryFromReader);
      msg.setQuote(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDstNative(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.rfqmm.QuoteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.rfqmm.QuoteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.rfqmm.QuoteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.rfqmm.QuoteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.service.rfqmm.Price.serializeBinaryToWriter
    );
  }
  f = message.getQuote();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.service.rfqmm.Quote.serializeBinaryToWriter
    );
  }
  f = message.getDstNative();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional Price price = 1;
 * @return {?proto.service.rfqmm.Price}
 */
proto.service.rfqmm.QuoteRequest.prototype.getPrice = function() {
  return /** @type{?proto.service.rfqmm.Price} */ (
    jspb.Message.getWrapperField(this, proto.service.rfqmm.Price, 1));
};


/**
 * @param {?proto.service.rfqmm.Price|undefined} value
 * @return {!proto.service.rfqmm.QuoteRequest} returns this
*/
proto.service.rfqmm.QuoteRequest.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.rfqmm.QuoteRequest} returns this
 */
proto.service.rfqmm.QuoteRequest.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.rfqmm.QuoteRequest.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Quote quote = 2;
 * @return {?proto.service.rfqmm.Quote}
 */
proto.service.rfqmm.QuoteRequest.prototype.getQuote = function() {
  return /** @type{?proto.service.rfqmm.Quote} */ (
    jspb.Message.getWrapperField(this, proto.service.rfqmm.Quote, 2));
};


/**
 * @param {?proto.service.rfqmm.Quote|undefined} value
 * @return {!proto.service.rfqmm.QuoteRequest} returns this
*/
proto.service.rfqmm.QuoteRequest.prototype.setQuote = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.rfqmm.QuoteRequest} returns this
 */
proto.service.rfqmm.QuoteRequest.prototype.clearQuote = function() {
  return this.setQuote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.rfqmm.QuoteRequest.prototype.hasQuote = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool dst_native = 3;
 * @return {boolean}
 */
proto.service.rfqmm.QuoteRequest.prototype.getDstNative = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.service.rfqmm.QuoteRequest} returns this
 */
proto.service.rfqmm.QuoteRequest.prototype.setDstNative = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.rfqmm.QuoteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.service.rfqmm.QuoteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.rfqmm.QuoteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.rfqmm.QuoteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && sdk_common_error_pb.Err.toObject(includeInstance, f),
    quoteSig: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.rfqmm.QuoteResponse}
 */
proto.service.rfqmm.QuoteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.rfqmm.QuoteResponse;
  return proto.service.rfqmm.QuoteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.rfqmm.QuoteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.rfqmm.QuoteResponse}
 */
proto.service.rfqmm.QuoteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sdk_common_error_pb.Err;
      reader.readMessage(value,sdk_common_error_pb.Err.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteSig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.rfqmm.QuoteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.rfqmm.QuoteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.rfqmm.QuoteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.rfqmm.QuoteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sdk_common_error_pb.Err.serializeBinaryToWriter
    );
  }
  f = message.getQuoteSig();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional common.Err err = 1;
 * @return {?proto.common.Err}
 */
proto.service.rfqmm.QuoteResponse.prototype.getErr = function() {
  return /** @type{?proto.common.Err} */ (
    jspb.Message.getWrapperField(this, sdk_common_error_pb.Err, 1));
};


/**
 * @param {?proto.common.Err|undefined} value
 * @return {!proto.service.rfqmm.QuoteResponse} returns this
*/
proto.service.rfqmm.QuoteResponse.prototype.setErr = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.rfqmm.QuoteResponse} returns this
 */
proto.service.rfqmm.QuoteResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.rfqmm.QuoteResponse.prototype.hasErr = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string quote_sig = 2;
 * @return {string}
 */
proto.service.rfqmm.QuoteResponse.prototype.getQuoteSig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.rfqmm.QuoteResponse} returns this
 */
proto.service.rfqmm.QuoteResponse.prototype.setQuoteSig = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.service.rfqmm.Config.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.rfqmm.Config.prototype.toObject = function(opt_includeInstance) {
  return proto.service.rfqmm.Config.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.rfqmm.Config} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.rfqmm.Config.toObject = function(includeInstance, msg) {
  var f, obj = {
    tokensList: jspb.Message.toObjectList(msg.getTokensList(),
    sdk_common_token_pb.Token.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.rfqmm.Config}
 */
proto.service.rfqmm.Config.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.rfqmm.Config;
  return proto.service.rfqmm.Config.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.rfqmm.Config} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.rfqmm.Config}
 */
proto.service.rfqmm.Config.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new sdk_common_token_pb.Token;
      reader.readMessage(value,sdk_common_token_pb.Token.deserializeBinaryFromReader);
      msg.addTokens(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.rfqmm.Config.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.rfqmm.Config.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.rfqmm.Config} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.rfqmm.Config.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTokensList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      sdk_common_token_pb.Token.serializeBinaryToWriter
    );
  }
};


/**
 * repeated common.Token tokens = 2;
 * @return {!Array<!proto.common.Token>}
 */
proto.service.rfqmm.Config.prototype.getTokensList = function() {
  return /** @type{!Array<!proto.common.Token>} */ (
    jspb.Message.getRepeatedWrapperField(this, sdk_common_token_pb.Token, 2));
};


/**
 * @param {!Array<!proto.common.Token>} value
 * @return {!proto.service.rfqmm.Config} returns this
*/
proto.service.rfqmm.Config.prototype.setTokensList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.common.Token=} opt_value
 * @param {number=} opt_index
 * @return {!proto.common.Token}
 */
proto.service.rfqmm.Config.prototype.addTokens = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.common.Token, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.service.rfqmm.Config} returns this
 */
proto.service.rfqmm.Config.prototype.clearTokensList = function() {
  return this.setTokensList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.rfqmm.Price.prototype.toObject = function(opt_includeInstance) {
  return proto.service.rfqmm.Price.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.rfqmm.Price} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.rfqmm.Price.toObject = function(includeInstance, msg) {
  var f, obj = {
    srcToken: (f = msg.getSrcToken()) && sdk_common_token_pb.Token.toObject(includeInstance, f),
    srcAmount: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dstToken: (f = msg.getDstToken()) && sdk_common_token_pb.Token.toObject(includeInstance, f),
    srcReleaseAmount: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dstAmount: jspb.Message.getFieldWithDefault(msg, 5, ""),
    feeAmount: jspb.Message.getFieldWithDefault(msg, 6, ""),
    validThru: jspb.Message.getFieldWithDefault(msg, 7, 0),
    mmAddr: jspb.Message.getFieldWithDefault(msg, 8, ""),
    sig: jspb.Message.getFieldWithDefault(msg, 9, ""),
    srcDepositPeriod: jspb.Message.getFieldWithDefault(msg, 10, 0),
    dstTransferPeriod: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.rfqmm.Price}
 */
proto.service.rfqmm.Price.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.rfqmm.Price;
  return proto.service.rfqmm.Price.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.rfqmm.Price} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.rfqmm.Price}
 */
proto.service.rfqmm.Price.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sdk_common_token_pb.Token;
      reader.readMessage(value,sdk_common_token_pb.Token.deserializeBinaryFromReader);
      msg.setSrcToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcAmount(value);
      break;
    case 3:
      var value = new sdk_common_token_pb.Token;
      reader.readMessage(value,sdk_common_token_pb.Token.deserializeBinaryFromReader);
      msg.setDstToken(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcReleaseAmount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDstAmount(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeeAmount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValidThru(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMmAddr(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSig(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSrcDepositPeriod(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDstTransferPeriod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.rfqmm.Price.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.rfqmm.Price.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.rfqmm.Price} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.rfqmm.Price.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcToken();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sdk_common_token_pb.Token.serializeBinaryToWriter
    );
  }
  f = message.getSrcAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDstToken();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      sdk_common_token_pb.Token.serializeBinaryToWriter
    );
  }
  f = message.getSrcReleaseAmount();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDstAmount();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFeeAmount();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getValidThru();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getMmAddr();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSig();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSrcDepositPeriod();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getDstTransferPeriod();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
};


/**
 * optional common.Token src_token = 1;
 * @return {?proto.common.Token}
 */
proto.service.rfqmm.Price.prototype.getSrcToken = function() {
  return /** @type{?proto.common.Token} */ (
    jspb.Message.getWrapperField(this, sdk_common_token_pb.Token, 1));
};


/**
 * @param {?proto.common.Token|undefined} value
 * @return {!proto.service.rfqmm.Price} returns this
*/
proto.service.rfqmm.Price.prototype.setSrcToken = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.rfqmm.Price} returns this
 */
proto.service.rfqmm.Price.prototype.clearSrcToken = function() {
  return this.setSrcToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.rfqmm.Price.prototype.hasSrcToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string src_amount = 2;
 * @return {string}
 */
proto.service.rfqmm.Price.prototype.getSrcAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.rfqmm.Price} returns this
 */
proto.service.rfqmm.Price.prototype.setSrcAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional common.Token dst_token = 3;
 * @return {?proto.common.Token}
 */
proto.service.rfqmm.Price.prototype.getDstToken = function() {
  return /** @type{?proto.common.Token} */ (
    jspb.Message.getWrapperField(this, sdk_common_token_pb.Token, 3));
};


/**
 * @param {?proto.common.Token|undefined} value
 * @return {!proto.service.rfqmm.Price} returns this
*/
proto.service.rfqmm.Price.prototype.setDstToken = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.rfqmm.Price} returns this
 */
proto.service.rfqmm.Price.prototype.clearDstToken = function() {
  return this.setDstToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.rfqmm.Price.prototype.hasDstToken = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string src_release_amount = 4;
 * @return {string}
 */
proto.service.rfqmm.Price.prototype.getSrcReleaseAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.rfqmm.Price} returns this
 */
proto.service.rfqmm.Price.prototype.setSrcReleaseAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string dst_amount = 5;
 * @return {string}
 */
proto.service.rfqmm.Price.prototype.getDstAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.rfqmm.Price} returns this
 */
proto.service.rfqmm.Price.prototype.setDstAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string fee_amount = 6;
 * @return {string}
 */
proto.service.rfqmm.Price.prototype.getFeeAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.rfqmm.Price} returns this
 */
proto.service.rfqmm.Price.prototype.setFeeAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 valid_thru = 7;
 * @return {number}
 */
proto.service.rfqmm.Price.prototype.getValidThru = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.service.rfqmm.Price} returns this
 */
proto.service.rfqmm.Price.prototype.setValidThru = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string mm_addr = 8;
 * @return {string}
 */
proto.service.rfqmm.Price.prototype.getMmAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.rfqmm.Price} returns this
 */
proto.service.rfqmm.Price.prototype.setMmAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string sig = 9;
 * @return {string}
 */
proto.service.rfqmm.Price.prototype.getSig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.rfqmm.Price} returns this
 */
proto.service.rfqmm.Price.prototype.setSig = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int64 src_deposit_period = 10;
 * @return {number}
 */
proto.service.rfqmm.Price.prototype.getSrcDepositPeriod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.service.rfqmm.Price} returns this
 */
proto.service.rfqmm.Price.prototype.setSrcDepositPeriod = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 dst_transfer_period = 11;
 * @return {number}
 */
proto.service.rfqmm.Price.prototype.getDstTransferPeriod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.service.rfqmm.Price} returns this
 */
proto.service.rfqmm.Price.prototype.setDstTransferPeriod = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.rfqmm.Quote.prototype.toObject = function(opt_includeInstance) {
  return proto.service.rfqmm.Quote.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.rfqmm.Quote} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.rfqmm.Quote.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    srcToken: (f = msg.getSrcToken()) && sdk_common_token_pb.Token.toObject(includeInstance, f),
    srcAmount: jspb.Message.getFieldWithDefault(msg, 3, ""),
    srcReleaseAmount: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dstToken: (f = msg.getDstToken()) && sdk_common_token_pb.Token.toObject(includeInstance, f),
    dstAmount: jspb.Message.getFieldWithDefault(msg, 6, ""),
    srcDeadline: jspb.Message.getFieldWithDefault(msg, 7, 0),
    dstDeadline: jspb.Message.getFieldWithDefault(msg, 8, 0),
    nonce: jspb.Message.getFieldWithDefault(msg, 9, 0),
    sender: jspb.Message.getFieldWithDefault(msg, 10, ""),
    receiver: jspb.Message.getFieldWithDefault(msg, 11, ""),
    refundTo: jspb.Message.getFieldWithDefault(msg, 12, ""),
    mmAddr: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.rfqmm.Quote}
 */
proto.service.rfqmm.Quote.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.rfqmm.Quote;
  return proto.service.rfqmm.Quote.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.rfqmm.Quote} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.rfqmm.Quote}
 */
proto.service.rfqmm.Quote.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 2:
      var value = new sdk_common_token_pb.Token;
      reader.readMessage(value,sdk_common_token_pb.Token.deserializeBinaryFromReader);
      msg.setSrcToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcAmount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcReleaseAmount(value);
      break;
    case 5:
      var value = new sdk_common_token_pb.Token;
      reader.readMessage(value,sdk_common_token_pb.Token.deserializeBinaryFromReader);
      msg.setDstToken(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDstAmount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSrcDeadline(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDstDeadline(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNonce(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiver(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefundTo(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setMmAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.rfqmm.Quote.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.rfqmm.Quote.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.rfqmm.Quote} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.rfqmm.Quote.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSrcToken();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sdk_common_token_pb.Token.serializeBinaryToWriter
    );
  }
  f = message.getSrcAmount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSrcReleaseAmount();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDstToken();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      sdk_common_token_pb.Token.serializeBinaryToWriter
    );
  }
  f = message.getDstAmount();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSrcDeadline();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getDstDeadline();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getNonce();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getRefundTo();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getMmAddr();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string hash = 1;
 * @return {string}
 */
proto.service.rfqmm.Quote.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.rfqmm.Quote} returns this
 */
proto.service.rfqmm.Quote.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional common.Token src_token = 2;
 * @return {?proto.common.Token}
 */
proto.service.rfqmm.Quote.prototype.getSrcToken = function() {
  return /** @type{?proto.common.Token} */ (
    jspb.Message.getWrapperField(this, sdk_common_token_pb.Token, 2));
};


/**
 * @param {?proto.common.Token|undefined} value
 * @return {!proto.service.rfqmm.Quote} returns this
*/
proto.service.rfqmm.Quote.prototype.setSrcToken = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.rfqmm.Quote} returns this
 */
proto.service.rfqmm.Quote.prototype.clearSrcToken = function() {
  return this.setSrcToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.rfqmm.Quote.prototype.hasSrcToken = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string src_amount = 3;
 * @return {string}
 */
proto.service.rfqmm.Quote.prototype.getSrcAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.rfqmm.Quote} returns this
 */
proto.service.rfqmm.Quote.prototype.setSrcAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string src_release_amount = 4;
 * @return {string}
 */
proto.service.rfqmm.Quote.prototype.getSrcReleaseAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.rfqmm.Quote} returns this
 */
proto.service.rfqmm.Quote.prototype.setSrcReleaseAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional common.Token dst_token = 5;
 * @return {?proto.common.Token}
 */
proto.service.rfqmm.Quote.prototype.getDstToken = function() {
  return /** @type{?proto.common.Token} */ (
    jspb.Message.getWrapperField(this, sdk_common_token_pb.Token, 5));
};


/**
 * @param {?proto.common.Token|undefined} value
 * @return {!proto.service.rfqmm.Quote} returns this
*/
proto.service.rfqmm.Quote.prototype.setDstToken = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.rfqmm.Quote} returns this
 */
proto.service.rfqmm.Quote.prototype.clearDstToken = function() {
  return this.setDstToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.rfqmm.Quote.prototype.hasDstToken = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string dst_amount = 6;
 * @return {string}
 */
proto.service.rfqmm.Quote.prototype.getDstAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.rfqmm.Quote} returns this
 */
proto.service.rfqmm.Quote.prototype.setDstAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 src_deadline = 7;
 * @return {number}
 */
proto.service.rfqmm.Quote.prototype.getSrcDeadline = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.service.rfqmm.Quote} returns this
 */
proto.service.rfqmm.Quote.prototype.setSrcDeadline = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 dst_deadline = 8;
 * @return {number}
 */
proto.service.rfqmm.Quote.prototype.getDstDeadline = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.service.rfqmm.Quote} returns this
 */
proto.service.rfqmm.Quote.prototype.setDstDeadline = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint64 nonce = 9;
 * @return {number}
 */
proto.service.rfqmm.Quote.prototype.getNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.service.rfqmm.Quote} returns this
 */
proto.service.rfqmm.Quote.prototype.setNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string sender = 10;
 * @return {string}
 */
proto.service.rfqmm.Quote.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.rfqmm.Quote} returns this
 */
proto.service.rfqmm.Quote.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string receiver = 11;
 * @return {string}
 */
proto.service.rfqmm.Quote.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.rfqmm.Quote} returns this
 */
proto.service.rfqmm.Quote.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string refund_to = 12;
 * @return {string}
 */
proto.service.rfqmm.Quote.prototype.getRefundTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.rfqmm.Quote} returns this
 */
proto.service.rfqmm.Quote.prototype.setRefundTo = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string mm_addr = 13;
 * @return {string}
 */
proto.service.rfqmm.Quote.prototype.getMmAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.service.rfqmm.Quote} returns this
 */
proto.service.rfqmm.Quote.prototype.setMmAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.service.rfqmm.DstTransferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.service.rfqmm.DstTransferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.service.rfqmm.DstTransferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.rfqmm.DstTransferRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    quote: (f = msg.getQuote()) && proto.service.rfqmm.Quote.toObject(includeInstance, f),
    quoteSig: msg.getQuoteSig_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.service.rfqmm.DstTransferRequest}
 */
proto.service.rfqmm.DstTransferRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.service.rfqmm.DstTransferRequest;
  return proto.service.rfqmm.DstTransferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.service.rfqmm.DstTransferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.service.rfqmm.DstTransferRequest}
 */
proto.service.rfqmm.DstTransferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.service.rfqmm.Quote;
      reader.readMessage(value,proto.service.rfqmm.Quote.deserializeBinaryFromReader);
      msg.setQuote(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setQuoteSig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.service.rfqmm.DstTransferRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.service.rfqmm.DstTransferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.service.rfqmm.DstTransferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.service.rfqmm.DstTransferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuote();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.service.rfqmm.Quote.serializeBinaryToWriter
    );
  }
  f = message.getQuoteSig_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional Quote quote = 1;
 * @return {?proto.service.rfqmm.Quote}
 */
proto.service.rfqmm.DstTransferRequest.prototype.getQuote = function() {
  return /** @type{?proto.service.rfqmm.Quote} */ (
    jspb.Message.getWrapperField(this, proto.service.rfqmm.Quote, 1));
};


/**
 * @param {?proto.service.rfqmm.Quote|undefined} value
 * @return {!proto.service.rfqmm.DstTransferRequest} returns this
*/
proto.service.rfqmm.DstTransferRequest.prototype.setQuote = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.service.rfqmm.DstTransferRequest} returns this
 */
proto.service.rfqmm.DstTransferRequest.prototype.clearQuote = function() {
  return this.setQuote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.service.rfqmm.DstTransferRequest.prototype.hasQuote = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes quote_sig = 2;
 * @return {!(string|Uint8Array)}
 */
proto.service.rfqmm.DstTransferRequest.prototype.getQuoteSig = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes quote_sig = 2;
 * This is a type-conversion wrapper around `getQuoteSig()`
 * @return {string}
 */
proto.service.rfqmm.DstTransferRequest.prototype.getQuoteSig_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getQuoteSig()));
};


/**
 * optional bytes quote_sig = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getQuoteSig()`
 * @return {!Uint8Array}
 */
proto.service.rfqmm.DstTransferRequest.prototype.getQuoteSig_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getQuoteSig()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.service.rfqmm.DstTransferRequest} returns this
 */
proto.service.rfqmm.DstTransferRequest.prototype.setQuoteSig = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.service.rfqmm.ErrCode = {
  ERROR_UNDEFINED: 0,
  ERROR_INVALID_ARGUMENTS: 1,
  ERROR_LIQUIDITY_PROVIDER: 2,
  ERROR_PRICE_PROVIDER: 3,
  ERROR_AMOUNT_CALCULATOR: 4,
  ERROR_REQUEST_SIGNER: 5,
  ERROR_LIQUIDITY_MANAGER: 6,
  ERROR_CHAIN_MANAGER: 7
};

goog.object.extend(exports, proto.service.rfqmm);
