/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Signers, SignersInterface } from "../Signers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "resetTime",
        type: "uint256",
      },
    ],
    name: "ResetNotification",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
    ],
    name: "SignersUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "increaseNoticePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "noticePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "notifyResetSigners",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
    ],
    name: "resetSigners",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resetTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ssHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "triggerTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_triggerTime",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_newSigners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_newPowers",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_sigs",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "_curSigners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_curPowers",
        type: "uint256[]",
      },
    ],
    name: "updateSigners",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_msg",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "_sigs",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
    ],
    name: "verifySigs",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6115b48061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80639b14d4c611610081578063d0790da91161005b578063d0790da91461015a578063f20c922a14610163578063f2fde38b1461017657600080fd5b80639b14d4c61461012b578063a7bdf45a14610134578063ba2cb25c1461014757600080fd5b806365a114f1116100b257806365a114f1146100f4578063682dbc22146100fd5780638da5cb5b1461011057600080fd5b806325c38b9f146100ce578063370fb47b146100d8575b600080fd5b6100d6610189565b005b6100e160025481565b6040519081526020015b60405180910390f35b6100e160035481565b6100d661010b366004611059565b61023e565b6000546040516001600160a01b0390911681526020016100eb565b6100e160045481565b6100d6610142366004611187565b61032a565b6100d66101553660046111f3565b6103fc565b6100e160015481565b6100d66101713660046112f3565b61056c565b6100d6610184366004611328565b610637565b3361019c6000546001600160a01b031690565b6001600160a01b0316146101f75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6004546102049042611360565b60038190556040519081527f68e825132f7d4bc837dea2d64ac9fc19912bf0224b67f9317d8f1a917f5304a19060200160405180910390a1565b60008484848460405160200161025794939291906113e4565b60405160208183030381529060405280519060200120905080600154146102c05760405162461bcd60e51b815260206004820152601860248201527f4d69736d617463682063757272656e74207369676e657273000000000000000060448201526064016101ee565b87516020808a0191909120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c019052805191012061032090888888888888610728565b5050505050505050565b3361033d6000546001600160a01b031690565b6001600160a01b0316146103935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ee565b60035442116103e45760405162461bcd60e51b815260206004820152601460248201527f6e6f742072656163682072657365742074696d6500000000000000000000000060448201526064016101ee565b6000196003556103f684848484610a5e565b50505050565b6002548b1161044d5760405162461bcd60e51b815260206004820152601e60248201527f547269676765722074696d65206973206e6f7420696e6372656173696e67000060448201526064016101ee565b61045942610e10611360565b8b106104a75760405162461bcd60e51b815260206004820152601960248201527f547269676765722074696d6520697320746f6f206c617267650000000000000060448201526064016101ee565b600046306040516020016104fd92919091825260601b6bffffffffffffffffffffffff191660208201527f5570646174655369676e65727300000000000000000000000000000000000000603482015260410190565b60405160208183030381529060405280519060200120905061054d818d8d8d8d8d60405160200161053396959493929190611405565b60405160208183030381529060405288888888888861023e565b6105598b8b8b8b610a5e565b5050506002989098555050505050505050565b3361057f6000546001600160a01b031690565b6001600160a01b0316146105d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ee565b60045481116106325760405162461bcd60e51b815260206004820152602360248201527f6e6f7469636520706572696f642063616e206f6e6c7920626520696e637265616044820152621cd95960ea1b60648201526084016101ee565b600455565b3361064a6000546001600160a01b031690565b6001600160a01b0316146106a05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ee565b6001600160a01b03811661071c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016101ee565b61072581610c08565b50565b8281146107835760405162461bcd60e51b815260206004820152602360248201527f7369676e65727320616e6420706f77657273206c656e677468206e6f74206d616044820152620e8c6d60eb1b60648201526084016101ee565b6000805b848110156107c7578383828181106107a1576107a161142d565b90506020020135826107b39190611360565b9150806107bf81611443565b915050610787565b50600060036107d783600261145e565b6107e1919061147d565b6107ec906001611360565b905060008080805b8a811015610a0c5760006108778d8d848181106108135761081361142d565b9050602002810190610825919061149f565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508f610c7090919063ffffffff16565b9050836001600160a01b0316816001600160a01b0316116108da5760405162461bcd60e51b815260206004820152601e60248201527f7369676e657273206e6f7420696e20617363656e64696e67206f72646572000060448201526064016101ee565b8093505b8a8a848181106108f0576108f061142d565b90506020020160208101906109059190611328565b6001600160a01b0316816001600160a01b0316111561097f57610929600184611360565b925089831061097a5760405162461bcd60e51b815260206004820152601060248201527f7369676e6572206e6f7420666f756e640000000000000000000000000000000060448201526064016101ee565b6108de565b8a8a848181106109915761099161142d565b90506020020160208101906109a69190611328565b6001600160a01b0316816001600160a01b031614156109e6578888848181106109d1576109d161142d565b90506020020135856109e39190611360565b94505b8585106109f95750505050505050610a55565b5080610a0481611443565b9150506107f4565b5060405162461bcd60e51b815260206004820152601260248201527f71756f72756d206e6f742072656163686564000000000000000000000000000060448201526064016101ee565b50505050505050565b828114610ab95760405162461bcd60e51b815260206004820152602360248201527f7369676e65727320616e6420706f77657273206c656e677468206e6f74206d616044820152620e8c6d60eb1b60648201526084016101ee565b6000805b84811015610b9257816001600160a01b0316868683818110610ae157610ae161142d565b9050602002016020810190610af69190611328565b6001600160a01b031611610b575760405162461bcd60e51b815260206004820152602260248201527f4e6577207369676e657273206e6f7420696e20617363656e64696e67206f726460448201526132b960f11b60648201526084016101ee565b858582818110610b6957610b6961142d565b9050602002016020810190610b7e9190611328565b915080610b8a81611443565b915050610abd565b5084848484604051602001610baa94939291906113e4565b60408051601f198184030181529082905280516020909101206001557ff126123539a68393c55697f617e7d1148e371988daed246c2f41da99965a23f890610bf99087908790879087906114e6565b60405180910390a15050505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000610c7f8585610c94565b91509150610c8c81610d04565b509392505050565b600080825160411415610ccb5760208301516040840151606085015160001a610cbf87828585610ebf565b94509450505050610cfd565b825160401415610cf55760208301516040840151610cea868383610fac565b935093505050610cfd565b506000905060025b9250929050565b6000816004811115610d1857610d18611568565b1415610d215750565b6001816004811115610d3557610d35611568565b1415610d835760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016101ee565b6002816004811115610d9757610d97611568565b1415610de55760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016101ee565b6003816004811115610df957610df9611568565b1415610e525760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016101ee565b6004816004811115610e6657610e66611568565b14156107255760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016101ee565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610ef65750600090506003610fa3565b8460ff16601b14158015610f0e57508460ff16601c14155b15610f1f5750600090506004610fa3565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610f73573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f9c57600060019250925050610fa3565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681610fe260ff86901c601b611360565b9050610ff087828885610ebf565b935093505050935093915050565b634e487b7160e01b600052604160045260246000fd5b60008083601f84011261102657600080fd5b50813567ffffffffffffffff81111561103e57600080fd5b6020830191508360208260051b8501011115610cfd57600080fd5b60008060008060008060006080888a03121561107457600080fd5b873567ffffffffffffffff8082111561108c57600080fd5b818a0191508a601f8301126110a057600080fd5b8135818111156110b2576110b2610ffe565b604051601f8201601f19908116603f011681019083821181831017156110da576110da610ffe565b816040528281528d60208487010111156110f357600080fd5b82602086016020830137600094508460208483010152809b5050505060208a013581811115611120578283fd5b61112c8c828d01611014565b90995097505060408a013581811115611143578283fd5b61114f8c828d01611014565b90975095505060608a013581811115611166578283fd5b6111728c828d01611014565b9a9d999c50979a509598949794955050505050565b6000806000806040858703121561119d57600080fd5b843567ffffffffffffffff808211156111b557600080fd5b6111c188838901611014565b909650945060208701359150808211156111da57600080fd5b506111e787828801611014565b95989497509550505050565b600080600080600080600080600080600060c08c8e03121561121457600080fd5b8b359a5067ffffffffffffffff8060208e0135111561123257600080fd5b6112428e60208f01358f01611014565b909b50995060408d013581101561125857600080fd5b6112688e60408f01358f01611014565b909950975060608d013581101561127e57600080fd5b61128e8e60608f01358f01611014565b909750955060808d01358110156112a457600080fd5b6112b48e60808f01358f01611014565b909550935060a08d01358110156112ca57600080fd5b506112db8d60a08e01358e01611014565b81935080925050509295989b509295989b9093969950565b60006020828403121561130557600080fd5b5035919050565b80356001600160a01b038116811461132357600080fd5b919050565b60006020828403121561133a57600080fd5b6113438261130c565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156113735761137361134a565b500190565b60008160005b848110156113ad576001600160a01b036113978361130c565b168652602095860195919091019060010161137e565b5093949350505050565b60006001600160fb1b038311156113cd57600080fd5b8260051b8083863760009401938452509192915050565b60006113fb6113f4838789611378565b84866113b7565b9695505050505050565b86815285602082015260006114216113f4604084018789611378565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156114575761145761134a565b5060010190565b60008160001904831182151516156114785761147861134a565b500290565b60008261149a57634e487b7160e01b600052601260045260246000fd5b500490565b6000808335601e198436030181126114b657600080fd5b83018035915067ffffffffffffffff8211156114d157600080fd5b602001915036819003821315610cfd57600080fd5b6040808252810184905260008560608301825b87811015611527576001600160a01b036115128461130c565b168252602092830192909101906001016114f9565b5083810360208501528481526001600160fb1b0385111561154757600080fd5b8460051b915081866020830137600091016020019081529695505050505050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220b78fd16f0d6f5624b7b11653d9c063e01559be3d6d75ed99396158ff417c90c964736f6c63430008090033";

type SignersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Signers__factory extends ContractFactory {
  constructor(...args: SignersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Signers";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Signers> {
    return super.deploy(overrides || {}) as Promise<Signers>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Signers {
    return super.attach(address) as Signers;
  }
  connect(signer: Signer): Signers__factory {
    return super.connect(signer) as Signers__factory;
  }
  static readonly contractName: "Signers";
  public readonly contractName: "Signers";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignersInterface {
    return new utils.Interface(_abi) as SignersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Signers {
    return new Contract(address, _abi, signerOrProvider) as Signers;
  }
}
