/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ContractAsLP, ContractAsLPInterface } from "../ContractAsLP";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "_inbox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addPauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "inbox",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isPauser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pausers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renouncePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_wdSeq",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_toChain",
        type: "uint64",
      },
      {
        internalType: "uint64[]",
        name: "_fromChains",
        type: "uint64[]",
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_ratios",
        type: "uint32[]",
      },
      {
        internalType: "uint32[]",
        name: "_slippages",
        type: "uint32[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016cf380380620016cf8339810160408190526200003491620001c5565b600160005562000044336200008e565b6001805460ff60a01b191690556200005c33620000e0565b600380546001600160a01b039384166001600160a01b03199182161790915560048054929093169116179055620001fd565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03811660009081526002602052604090205460ff16156200014e5760405162461bcd60e51b815260206004820152601960248201527f4163636f756e7420697320616c72656164792070617573657200000000000000604482015260640160405180910390fd5b6001600160a01b038116600081815260026020908152604091829020805460ff1916600117905590519182527f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8910160405180910390a150565b80516001600160a01b0381168114620001c057600080fd5b919050565b60008060408385031215620001d957600080fd5b620001e483620001a8565b9150620001f460208401620001a8565b90509250929050565b6114c2806200020d6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806380f51c1211610097578063a485529611610066578063a4855296146101fb578063e78cea921461020e578063f2fde38b14610221578063fb0e722b1461023457600080fd5b806380f51c121461019857806382dc1ec4146101bb5780638456cb59146101ce5780638da5cb5b146101d657600080fd5b806356688700116100d357806356688700146101585780635c975abb1461016b5780636b2c0f551461017d5780636ef8d66d1461019057600080fd5b80633f4ba83a146100fa57806346fbf68e1461010457806347e7ef2414610145575b600080fd5b610102610247565b005b6101306101123660046110bb565b6001600160a01b031660009081526002602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6101026101533660046110d6565b6102b5565b6101026101663660046110d6565b61042a565b600154600160a01b900460ff16610130565b61010261018b3660046110bb565b61062a565b61010261069f565b6101306101a63660046110bb565b60026020526000908152604090205460ff1681565b6101026101c93660046110bb565b6106a8565b61010261071a565b6001546001600160a01b03165b6040516001600160a01b03909116815260200161013c565b610102610209366004611164565b610781565b6003546101e3906001600160a01b031681565b61010261022f3660046110bb565b6108b9565b6004546101e3906001600160a01b031681565b3360009081526002602052604090205460ff166102ab5760405162461bcd60e51b815260206004820152601460248201527f43616c6c6572206973206e6f742070617573657200000000000000000000000060448201526064015b60405180910390fd5b6102b36109a7565b565b600260005414156103085760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102a2565b6002600055600154600160a01b900460ff161561035a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102a2565b3361036d6001546001600160a01b031690565b6001600160a01b0316146103c35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102a2565b6103d86001600160a01b038316333084610a4d565b604080513381526001600160a01b03841660208201529081018290527f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a79060600160405180910390a150506001600055565b600154600160a01b900460ff16156104775760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102a2565b3361048a6001546001600160a01b031690565b6001600160a01b0316146104e05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102a2565b6040516370a0823160e01b815230600482015281906001600160a01b038416906370a082319060240160206040518083038186803b15801561052157600080fd5b505afa158015610535573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105599190611261565b10156105a75760405162461bcd60e51b815260206004820152601460248201527f696e73756666696369656e742062616c616e636500000000000000000000000060448201526064016102a2565b6003546105c1906001600160a01b03848116911683610aeb565b6003546040516256688760e81b81526001600160a01b0384811660048301526024820184905290911690635668870090604401600060405180830381600087803b15801561060e57600080fd5b505af1158015610622573d6000803e3d6000fd5b505050505050565b3361063d6001546001600160a01b031690565b6001600160a01b0316146106935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102a2565b61069c81610bac565b50565b6102b333610bac565b336106bb6001546001600160a01b031690565b6001600160a01b0316146107115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102a2565b61069c81610c6c565b3360009081526002602052604090205460ff166107795760405162461bcd60e51b815260206004820152601460248201527f43616c6c6572206973206e6f742070617573657200000000000000000000000060448201526064016102a2565b6102b3610d29565b600154600160a01b900460ff16156107ce5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102a2565b336107e16001546001600160a01b031690565b6001600160a01b0316146108375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102a2565b60048054604051635242a94b60e11b81526001600160a01b039091169163a48552969161087a918f918f918f918f918f918f918f918f918f918f918f910161130d565b600060405180830381600087803b15801561089457600080fd5b505af11580156108a8573d6000803e3d6000fd5b505050505050505050505050505050565b336108cc6001546001600160a01b031690565b6001600160a01b0316146109225760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102a2565b6001600160a01b03811661099e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102a2565b61069c81610db1565b600154600160a01b900460ff16610a005760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016102a2565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6040516001600160a01b0380851660248301528316604482015260648101829052610ae59085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610e1b565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b158015610b3757600080fd5b505afa158015610b4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6f9190611261565b610b7991906113c9565b6040516001600160a01b038516602482015260448101829052909150610ae590859063095ea7b360e01b90606401610a81565b6001600160a01b03811660009081526002602052604090205460ff16610c145760405162461bcd60e51b815260206004820152601560248201527f4163636f756e74206973206e6f7420706175736572000000000000000000000060448201526064016102a2565b6001600160a01b038116600081815260026020908152604091829020805460ff1916905590519182527fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e91015b60405180910390a150565b6001600160a01b03811660009081526002602052604090205460ff1615610cd55760405162461bcd60e51b815260206004820152601960248201527f4163636f756e7420697320616c7265616479207061757365720000000000000060448201526064016102a2565b6001600160a01b038116600081815260026020908152604091829020805460ff1916600117905590519182527f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f89101610c61565b600154600160a01b900460ff1615610d765760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102a2565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610a303390565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610e70826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f059092919063ffffffff16565b805190915015610f005780806020019051810190610e8e91906113ef565b610f005760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016102a2565b505050565b6060610f148484600085610f1e565b90505b9392505050565b606082471015610f965760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016102a2565b6001600160a01b0385163b610fed5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102a2565b600080866001600160a01b03168587604051611009919061143d565b60006040518083038185875af1925050503d8060008114611046576040519150601f19603f3d011682016040523d82523d6000602084013e61104b565b606091505b509150915061105b828286611066565b979650505050505050565b60608315611075575081610f17565b8251156110855782518084602001fd5b8160405162461bcd60e51b81526004016102a29190611459565b80356001600160a01b03811681146110b657600080fd5b919050565b6000602082840312156110cd57600080fd5b610f178261109f565b600080604083850312156110e957600080fd5b6110f28361109f565b946020939093013593505050565b803567ffffffffffffffff811681146110b657600080fd5b60008083601f84011261112a57600080fd5b50813567ffffffffffffffff81111561114257600080fd5b6020830191508360208260051b850101111561115d57600080fd5b9250929050565b600080600080600080600080600080600060e08c8e03121561118557600080fd5b61118e8c611100565b9a5061119c60208d0161109f565b99506111aa60408d01611100565b985067ffffffffffffffff8060608e013511156111c657600080fd5b6111d68e60608f01358f01611118565b909950975060808d01358110156111ec57600080fd5b6111fc8e60808f01358f01611118565b909750955060a08d013581101561121257600080fd5b6112228e60a08f01358f01611118565b909550935060c08d013581101561123857600080fd5b506112498d60c08e01358e01611118565b81935080925050509295989b509295989b9093969950565b60006020828403121561127357600080fd5b5051919050565b8183526000602080850194508260005b858110156112b6576001600160a01b036112a38361109f565b168752958201959082019060010161128a565b509495945050505050565b818352600060208085019450826000805b8681101561130157823563ffffffff81168082146112ee578384fd5b89525096830196918301916001016112d2565b50959695505050505050565b600060e0820167ffffffffffffffff808f16845260206001600160a01b038f1681860152818e16604086015260e06060860152828c8452610100860190508d935060005b8d811015611376578361136386611100565b1682529382019390820190600101611351565b50858103608087015261138a818c8e61127a565b935050505082810360a08401526113a28187896112c1565b905082810360c08401526113b78185876112c1565b9e9d5050505050505050505050505050565b600082198211156113ea57634e487b7160e01b600052601160045260246000fd5b500190565b60006020828403121561140157600080fd5b81518015158114610f1757600080fd5b60005b8381101561142c578181015183820152602001611414565b83811115610ae55750506000910152565b6000825161144f818460208701611411565b9190910192915050565b6020815260008251806020840152611478816040850160208701611411565b601f01601f1916919091016040019291505056fea2646970667358221220f2d64fd7232abcf60b256e989779b56b46ce13b87a45b2da64a24eac3d3f63be64736f6c63430008090033";

type ContractAsLPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractAsLPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractAsLP__factory extends ContractFactory {
  constructor(...args: ContractAsLPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ContractAsLP";
  }

  deploy(
    _bridge: string,
    _inbox: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractAsLP> {
    return super.deploy(
      _bridge,
      _inbox,
      overrides || {}
    ) as Promise<ContractAsLP>;
  }
  getDeployTransaction(
    _bridge: string,
    _inbox: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_bridge, _inbox, overrides || {});
  }
  attach(address: string): ContractAsLP {
    return super.attach(address) as ContractAsLP;
  }
  connect(signer: Signer): ContractAsLP__factory {
    return super.connect(signer) as ContractAsLP__factory;
  }
  static readonly contractName: "ContractAsLP";
  public readonly contractName: "ContractAsLP";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractAsLPInterface {
    return new utils.Interface(_abi) as ContractAsLPInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractAsLP {
    return new Contract(address, _abi, signerOrProvider) as ContractAsLP;
  }
}
