// source: sdk/service/rfq/user.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var sdk_common_token_pb = require('../../../sdk/common/token_pb.js');
goog.object.extend(proto, sdk_common_token_pb);
var sdk_common_error_pb = require('../../../sdk/common/error_pb.js');
goog.object.extend(proto, sdk_common_error_pb);
var sdk_service_rfq_model_pb = require('../../../sdk/service/rfq/model_pb.js');
goog.object.extend(proto, sdk_service_rfq_model_pb);
var sdk_service_rfqmm_api_pb = require('../../../sdk/service/rfqmm/api_pb.js');
goog.object.extend(proto, sdk_service_rfqmm_api_pb);
goog.exportSymbol('proto.rfq.FilterOrdersRequest', null, global);
goog.exportSymbol('proto.rfq.FilterOrdersResponse', null, global);
goog.exportSymbol('proto.rfq.GetConfigsRequest', null, global);
goog.exportSymbol('proto.rfq.GetConfigsResponse', null, global);
goog.exportSymbol('proto.rfq.GetHistoryRequest', null, global);
goog.exportSymbol('proto.rfq.GetHistoryResponse', null, global);
goog.exportSymbol('proto.rfq.GetMarketMakersRequest', null, global);
goog.exportSymbol('proto.rfq.GetMarketMakersResponse', null, global);
goog.exportSymbol('proto.rfq.GetOrdersRequest', null, global);
goog.exportSymbol('proto.rfq.GetOrdersResponse', null, global);
goog.exportSymbol('proto.rfq.GetRefundExecMsgCallDataRequest', null, global);
goog.exportSymbol('proto.rfq.GetRefundExecMsgCallDataResponse', null, global);
goog.exportSymbol('proto.rfq.PriceRequest', null, global);
goog.exportSymbol('proto.rfq.PriceResponse', null, global);
goog.exportSymbol('proto.rfq.QuoteRequest', null, global);
goog.exportSymbol('proto.rfq.QuoteResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.GetConfigsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rfq.GetConfigsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.GetConfigsRequest.displayName = 'proto.rfq.GetConfigsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.GetConfigsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rfq.GetConfigsResponse.repeatedFields_, null);
};
goog.inherits(proto.rfq.GetConfigsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.GetConfigsResponse.displayName = 'proto.rfq.GetConfigsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.PriceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rfq.PriceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.PriceRequest.displayName = 'proto.rfq.PriceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.PriceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rfq.PriceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.PriceResponse.displayName = 'proto.rfq.PriceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.QuoteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rfq.QuoteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.QuoteRequest.displayName = 'proto.rfq.QuoteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.QuoteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rfq.QuoteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.QuoteResponse.displayName = 'proto.rfq.QuoteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.GetHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rfq.GetHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.GetHistoryRequest.displayName = 'proto.rfq.GetHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.GetHistoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rfq.GetHistoryResponse.repeatedFields_, null);
};
goog.inherits(proto.rfq.GetHistoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.GetHistoryResponse.displayName = 'proto.rfq.GetHistoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.GetOrdersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rfq.GetOrdersRequest.repeatedFields_, null);
};
goog.inherits(proto.rfq.GetOrdersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.GetOrdersRequest.displayName = 'proto.rfq.GetOrdersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.GetOrdersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rfq.GetOrdersResponse.repeatedFields_, null);
};
goog.inherits(proto.rfq.GetOrdersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.GetOrdersResponse.displayName = 'proto.rfq.GetOrdersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.FilterOrdersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rfq.FilterOrdersRequest.repeatedFields_, null);
};
goog.inherits(proto.rfq.FilterOrdersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.FilterOrdersRequest.displayName = 'proto.rfq.FilterOrdersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.FilterOrdersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rfq.FilterOrdersResponse.repeatedFields_, null);
};
goog.inherits(proto.rfq.FilterOrdersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.FilterOrdersResponse.displayName = 'proto.rfq.FilterOrdersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.GetMarketMakersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rfq.GetMarketMakersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.GetMarketMakersRequest.displayName = 'proto.rfq.GetMarketMakersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.GetMarketMakersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rfq.GetMarketMakersResponse.repeatedFields_, null);
};
goog.inherits(proto.rfq.GetMarketMakersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.GetMarketMakersResponse.displayName = 'proto.rfq.GetMarketMakersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.GetRefundExecMsgCallDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rfq.GetRefundExecMsgCallDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.GetRefundExecMsgCallDataRequest.displayName = 'proto.rfq.GetRefundExecMsgCallDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rfq.GetRefundExecMsgCallDataResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rfq.GetRefundExecMsgCallDataResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rfq.GetRefundExecMsgCallDataResponse.displayName = 'proto.rfq.GetRefundExecMsgCallDataResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.GetConfigsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.GetConfigsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.GetConfigsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetConfigsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.GetConfigsRequest}
 */
proto.rfq.GetConfigsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.GetConfigsRequest;
  return proto.rfq.GetConfigsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.GetConfigsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.GetConfigsRequest}
 */
proto.rfq.GetConfigsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.GetConfigsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.GetConfigsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.GetConfigsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetConfigsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rfq.GetConfigsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.GetConfigsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.GetConfigsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.GetConfigsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetConfigsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractAddrsMap: (f = msg.getContractAddrsMap()) ? f.toObject(includeInstance, undefined) : [],
    tokensList: jspb.Message.toObjectList(msg.getTokensList(),
    sdk_common_token_pb.Token.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.GetConfigsResponse}
 */
proto.rfq.GetConfigsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.GetConfigsResponse;
  return proto.rfq.GetConfigsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.GetConfigsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.GetConfigsResponse}
 */
proto.rfq.GetConfigsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getContractAddrsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint64, jspb.BinaryReader.prototype.readString, null, 0, "");
         });
      break;
    case 2:
      var value = new sdk_common_token_pb.Token;
      reader.readMessage(value,sdk_common_token_pb.Token.deserializeBinaryFromReader);
      msg.addTokens(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.GetConfigsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.GetConfigsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.GetConfigsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetConfigsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractAddrsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeUint64, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getTokensList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      sdk_common_token_pb.Token.serializeBinaryToWriter
    );
  }
};


/**
 * map<uint64, string> contract_addrs = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,string>}
 */
proto.rfq.GetConfigsResponse.prototype.getContractAddrsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.rfq.GetConfigsResponse} returns this
 */
proto.rfq.GetConfigsResponse.prototype.clearContractAddrsMap = function() {
  this.getContractAddrsMap().clear();
  return this;};


/**
 * repeated common.Token tokens = 2;
 * @return {!Array<!proto.common.Token>}
 */
proto.rfq.GetConfigsResponse.prototype.getTokensList = function() {
  return /** @type{!Array<!proto.common.Token>} */ (
    jspb.Message.getRepeatedWrapperField(this, sdk_common_token_pb.Token, 2));
};


/**
 * @param {!Array<!proto.common.Token>} value
 * @return {!proto.rfq.GetConfigsResponse} returns this
*/
proto.rfq.GetConfigsResponse.prototype.setTokensList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.common.Token=} opt_value
 * @param {number=} opt_index
 * @return {!proto.common.Token}
 */
proto.rfq.GetConfigsResponse.prototype.addTokens = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.common.Token, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rfq.GetConfigsResponse} returns this
 */
proto.rfq.GetConfigsResponse.prototype.clearTokensList = function() {
  return this.setTokensList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.PriceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.PriceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.PriceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.PriceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    srcToken: (f = msg.getSrcToken()) && sdk_common_token_pb.Token.toObject(includeInstance, f),
    dstToken: (f = msg.getDstToken()) && sdk_common_token_pb.Token.toObject(includeInstance, f),
    srcAmount: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dstAmount: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dstNative: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.PriceRequest}
 */
proto.rfq.PriceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.PriceRequest;
  return proto.rfq.PriceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.PriceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.PriceRequest}
 */
proto.rfq.PriceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sdk_common_token_pb.Token;
      reader.readMessage(value,sdk_common_token_pb.Token.deserializeBinaryFromReader);
      msg.setSrcToken(value);
      break;
    case 2:
      var value = new sdk_common_token_pb.Token;
      reader.readMessage(value,sdk_common_token_pb.Token.deserializeBinaryFromReader);
      msg.setDstToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcAmount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDstAmount(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDstNative(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.PriceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.PriceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.PriceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.PriceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcToken();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sdk_common_token_pb.Token.serializeBinaryToWriter
    );
  }
  f = message.getDstToken();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sdk_common_token_pb.Token.serializeBinaryToWriter
    );
  }
  f = message.getSrcAmount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDstAmount();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDstNative();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional common.Token src_token = 1;
 * @return {?proto.common.Token}
 */
proto.rfq.PriceRequest.prototype.getSrcToken = function() {
  return /** @type{?proto.common.Token} */ (
    jspb.Message.getWrapperField(this, sdk_common_token_pb.Token, 1));
};


/**
 * @param {?proto.common.Token|undefined} value
 * @return {!proto.rfq.PriceRequest} returns this
*/
proto.rfq.PriceRequest.prototype.setSrcToken = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rfq.PriceRequest} returns this
 */
proto.rfq.PriceRequest.prototype.clearSrcToken = function() {
  return this.setSrcToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rfq.PriceRequest.prototype.hasSrcToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.Token dst_token = 2;
 * @return {?proto.common.Token}
 */
proto.rfq.PriceRequest.prototype.getDstToken = function() {
  return /** @type{?proto.common.Token} */ (
    jspb.Message.getWrapperField(this, sdk_common_token_pb.Token, 2));
};


/**
 * @param {?proto.common.Token|undefined} value
 * @return {!proto.rfq.PriceRequest} returns this
*/
proto.rfq.PriceRequest.prototype.setDstToken = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rfq.PriceRequest} returns this
 */
proto.rfq.PriceRequest.prototype.clearDstToken = function() {
  return this.setDstToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rfq.PriceRequest.prototype.hasDstToken = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string src_amount = 3;
 * @return {string}
 */
proto.rfq.PriceRequest.prototype.getSrcAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.PriceRequest} returns this
 */
proto.rfq.PriceRequest.prototype.setSrcAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string dst_amount = 4;
 * @return {string}
 */
proto.rfq.PriceRequest.prototype.getDstAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.PriceRequest} returns this
 */
proto.rfq.PriceRequest.prototype.setDstAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool dst_native = 5;
 * @return {boolean}
 */
proto.rfq.PriceRequest.prototype.getDstNative = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rfq.PriceRequest} returns this
 */
proto.rfq.PriceRequest.prototype.setDstNative = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.PriceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.PriceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.PriceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.PriceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && sdk_common_error_pb.Err.toObject(includeInstance, f),
    price: (f = msg.getPrice()) && sdk_service_rfqmm_api_pb.Price.toObject(includeInstance, f),
    fee: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mmId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    txMsgFee: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.PriceResponse}
 */
proto.rfq.PriceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.PriceResponse;
  return proto.rfq.PriceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.PriceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.PriceResponse}
 */
proto.rfq.PriceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sdk_common_error_pb.Err;
      reader.readMessage(value,sdk_common_error_pb.Err.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new sdk_service_rfqmm_api_pb.Price;
      reader.readMessage(value,sdk_service_rfqmm_api_pb.Price.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFee(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMmId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxMsgFee(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.PriceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.PriceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.PriceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.PriceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sdk_common_error_pb.Err.serializeBinaryToWriter
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sdk_service_rfqmm_api_pb.Price.serializeBinaryToWriter
    );
  }
  f = message.getFee();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMmId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTxMsgFee();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional common.Err err = 1;
 * @return {?proto.common.Err}
 */
proto.rfq.PriceResponse.prototype.getErr = function() {
  return /** @type{?proto.common.Err} */ (
    jspb.Message.getWrapperField(this, sdk_common_error_pb.Err, 1));
};


/**
 * @param {?proto.common.Err|undefined} value
 * @return {!proto.rfq.PriceResponse} returns this
*/
proto.rfq.PriceResponse.prototype.setErr = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rfq.PriceResponse} returns this
 */
proto.rfq.PriceResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rfq.PriceResponse.prototype.hasErr = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional service.rfqmm.Price price = 2;
 * @return {?proto.service.rfqmm.Price}
 */
proto.rfq.PriceResponse.prototype.getPrice = function() {
  return /** @type{?proto.service.rfqmm.Price} */ (
    jspb.Message.getWrapperField(this, sdk_service_rfqmm_api_pb.Price, 2));
};


/**
 * @param {?proto.service.rfqmm.Price|undefined} value
 * @return {!proto.rfq.PriceResponse} returns this
*/
proto.rfq.PriceResponse.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rfq.PriceResponse} returns this
 */
proto.rfq.PriceResponse.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rfq.PriceResponse.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string fee = 3;
 * @return {string}
 */
proto.rfq.PriceResponse.prototype.getFee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.PriceResponse} returns this
 */
proto.rfq.PriceResponse.prototype.setFee = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string mm_id = 4;
 * @return {string}
 */
proto.rfq.PriceResponse.prototype.getMmId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.PriceResponse} returns this
 */
proto.rfq.PriceResponse.prototype.setMmId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string tx_msg_fee = 5;
 * @return {string}
 */
proto.rfq.PriceResponse.prototype.getTxMsgFee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.PriceResponse} returns this
 */
proto.rfq.PriceResponse.prototype.setTxMsgFee = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.QuoteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.QuoteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.QuoteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.QuoteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    price: (f = msg.getPrice()) && sdk_service_rfqmm_api_pb.Price.toObject(includeInstance, f),
    mmId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sender: jspb.Message.getFieldWithDefault(msg, 3, ""),
    receiver: jspb.Message.getFieldWithDefault(msg, 4, ""),
    refundTo: jspb.Message.getFieldWithDefault(msg, 5, ""),
    srcDeadline: jspb.Message.getFieldWithDefault(msg, 6, 0),
    dstDeadline: jspb.Message.getFieldWithDefault(msg, 7, 0),
    dstNative: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    srcNative: jspb.Message.getBooleanFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.QuoteRequest}
 */
proto.rfq.QuoteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.QuoteRequest;
  return proto.rfq.QuoteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.QuoteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.QuoteRequest}
 */
proto.rfq.QuoteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sdk_service_rfqmm_api_pb.Price;
      reader.readMessage(value,sdk_service_rfqmm_api_pb.Price.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMmId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiver(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefundTo(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSrcDeadline(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDstDeadline(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDstNative(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSrcNative(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.QuoteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.QuoteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.QuoteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.QuoteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sdk_service_rfqmm_api_pb.Price.serializeBinaryToWriter
    );
  }
  f = message.getMmId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRefundTo();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSrcDeadline();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getDstDeadline();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getDstNative();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getSrcNative();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional service.rfqmm.Price price = 1;
 * @return {?proto.service.rfqmm.Price}
 */
proto.rfq.QuoteRequest.prototype.getPrice = function() {
  return /** @type{?proto.service.rfqmm.Price} */ (
    jspb.Message.getWrapperField(this, sdk_service_rfqmm_api_pb.Price, 1));
};


/**
 * @param {?proto.service.rfqmm.Price|undefined} value
 * @return {!proto.rfq.QuoteRequest} returns this
*/
proto.rfq.QuoteRequest.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rfq.QuoteRequest} returns this
 */
proto.rfq.QuoteRequest.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rfq.QuoteRequest.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string mm_id = 2;
 * @return {string}
 */
proto.rfq.QuoteRequest.prototype.getMmId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.QuoteRequest} returns this
 */
proto.rfq.QuoteRequest.prototype.setMmId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sender = 3;
 * @return {string}
 */
proto.rfq.QuoteRequest.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.QuoteRequest} returns this
 */
proto.rfq.QuoteRequest.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string receiver = 4;
 * @return {string}
 */
proto.rfq.QuoteRequest.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.QuoteRequest} returns this
 */
proto.rfq.QuoteRequest.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string refund_to = 5;
 * @return {string}
 */
proto.rfq.QuoteRequest.prototype.getRefundTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.QuoteRequest} returns this
 */
proto.rfq.QuoteRequest.prototype.setRefundTo = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 src_deadline = 6;
 * @return {number}
 */
proto.rfq.QuoteRequest.prototype.getSrcDeadline = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.rfq.QuoteRequest} returns this
 */
proto.rfq.QuoteRequest.prototype.setSrcDeadline = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 dst_deadline = 7;
 * @return {number}
 */
proto.rfq.QuoteRequest.prototype.getDstDeadline = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.rfq.QuoteRequest} returns this
 */
proto.rfq.QuoteRequest.prototype.setDstDeadline = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool dst_native = 8;
 * @return {boolean}
 */
proto.rfq.QuoteRequest.prototype.getDstNative = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rfq.QuoteRequest} returns this
 */
proto.rfq.QuoteRequest.prototype.setDstNative = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool src_native = 9;
 * @return {boolean}
 */
proto.rfq.QuoteRequest.prototype.getSrcNative = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rfq.QuoteRequest} returns this
 */
proto.rfq.QuoteRequest.prototype.setSrcNative = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.QuoteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.QuoteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.QuoteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.QuoteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && sdk_common_error_pb.Err.toObject(includeInstance, f),
    srcTokenUsdPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    dstTokenUsdPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    quote: (f = msg.getQuote()) && sdk_service_rfqmm_api_pb.Quote.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.QuoteResponse}
 */
proto.rfq.QuoteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.QuoteResponse;
  return proto.rfq.QuoteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.QuoteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.QuoteResponse}
 */
proto.rfq.QuoteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sdk_common_error_pb.Err;
      reader.readMessage(value,sdk_common_error_pb.Err.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSrcTokenUsdPrice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDstTokenUsdPrice(value);
      break;
    case 4:
      var value = new sdk_service_rfqmm_api_pb.Quote;
      reader.readMessage(value,sdk_service_rfqmm_api_pb.Quote.deserializeBinaryFromReader);
      msg.setQuote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.QuoteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.QuoteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.QuoteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.QuoteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      sdk_common_error_pb.Err.serializeBinaryToWriter
    );
  }
  f = message.getSrcTokenUsdPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getDstTokenUsdPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getQuote();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      sdk_service_rfqmm_api_pb.Quote.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.Err err = 1;
 * @return {?proto.common.Err}
 */
proto.rfq.QuoteResponse.prototype.getErr = function() {
  return /** @type{?proto.common.Err} */ (
    jspb.Message.getWrapperField(this, sdk_common_error_pb.Err, 1));
};


/**
 * @param {?proto.common.Err|undefined} value
 * @return {!proto.rfq.QuoteResponse} returns this
*/
proto.rfq.QuoteResponse.prototype.setErr = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rfq.QuoteResponse} returns this
 */
proto.rfq.QuoteResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rfq.QuoteResponse.prototype.hasErr = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double src_token_usd_price = 2;
 * @return {number}
 */
proto.rfq.QuoteResponse.prototype.getSrcTokenUsdPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rfq.QuoteResponse} returns this
 */
proto.rfq.QuoteResponse.prototype.setSrcTokenUsdPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double dst_token_usd_price = 3;
 * @return {number}
 */
proto.rfq.QuoteResponse.prototype.getDstTokenUsdPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.rfq.QuoteResponse} returns this
 */
proto.rfq.QuoteResponse.prototype.setDstTokenUsdPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional service.rfqmm.Quote quote = 4;
 * @return {?proto.service.rfqmm.Quote}
 */
proto.rfq.QuoteResponse.prototype.getQuote = function() {
  return /** @type{?proto.service.rfqmm.Quote} */ (
    jspb.Message.getWrapperField(this, sdk_service_rfqmm_api_pb.Quote, 4));
};


/**
 * @param {?proto.service.rfqmm.Quote|undefined} value
 * @return {!proto.rfq.QuoteResponse} returns this
*/
proto.rfq.QuoteResponse.prototype.setQuote = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rfq.QuoteResponse} returns this
 */
proto.rfq.QuoteResponse.prototype.clearQuote = function() {
  return this.setQuote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rfq.QuoteResponse.prototype.hasQuote = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.GetHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.GetHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.GetHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    userAddr: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.GetHistoryRequest}
 */
proto.rfq.GetHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.GetHistoryRequest;
  return proto.rfq.GetHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.GetHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.GetHistoryRequest}
 */
proto.rfq.GetHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.GetHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.GetHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.GetHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getUserAddr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string next_page_token = 1;
 * @return {string}
 */
proto.rfq.GetHistoryRequest.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.GetHistoryRequest} returns this
 */
proto.rfq.GetHistoryRequest.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 page_size = 2;
 * @return {number}
 */
proto.rfq.GetHistoryRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rfq.GetHistoryRequest} returns this
 */
proto.rfq.GetHistoryRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string user_addr = 3;
 * @return {string}
 */
proto.rfq.GetHistoryRequest.prototype.getUserAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.GetHistoryRequest} returns this
 */
proto.rfq.GetHistoryRequest.prototype.setUserAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rfq.GetHistoryResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.GetHistoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.GetHistoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.GetHistoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetHistoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    sdk_service_rfq_model_pb.UserOrder.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.GetHistoryResponse}
 */
proto.rfq.GetHistoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.GetHistoryResponse;
  return proto.rfq.GetHistoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.GetHistoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.GetHistoryResponse}
 */
proto.rfq.GetHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new sdk_service_rfq_model_pb.UserOrder;
      reader.readMessage(value,sdk_service_rfq_model_pb.UserOrder.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.GetHistoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.GetHistoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.GetHistoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetHistoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      sdk_service_rfq_model_pb.UserOrder.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UserOrder orders = 2;
 * @return {!Array<!proto.rfq.UserOrder>}
 */
proto.rfq.GetHistoryResponse.prototype.getOrdersList = function() {
  return /** @type{!Array<!proto.rfq.UserOrder>} */ (
    jspb.Message.getRepeatedWrapperField(this, sdk_service_rfq_model_pb.UserOrder, 2));
};


/**
 * @param {!Array<!proto.rfq.UserOrder>} value
 * @return {!proto.rfq.GetHistoryResponse} returns this
*/
proto.rfq.GetHistoryResponse.prototype.setOrdersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.rfq.UserOrder=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rfq.UserOrder}
 */
proto.rfq.GetHistoryResponse.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.rfq.UserOrder, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rfq.GetHistoryResponse} returns this
 */
proto.rfq.GetHistoryResponse.prototype.clearOrdersList = function() {
  return this.setOrdersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rfq.GetOrdersRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.GetOrdersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.GetOrdersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.GetOrdersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetOrdersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    quoteHashesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.GetOrdersRequest}
 */
proto.rfq.GetOrdersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.GetOrdersRequest;
  return proto.rfq.GetOrdersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.GetOrdersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.GetOrdersRequest}
 */
proto.rfq.GetOrdersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addQuoteHashes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.GetOrdersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.GetOrdersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.GetOrdersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetOrdersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuoteHashesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string quote_hashes = 1;
 * @return {!Array<string>}
 */
proto.rfq.GetOrdersRequest.prototype.getQuoteHashesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.rfq.GetOrdersRequest} returns this
 */
proto.rfq.GetOrdersRequest.prototype.setQuoteHashesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.rfq.GetOrdersRequest} returns this
 */
proto.rfq.GetOrdersRequest.prototype.addQuoteHashes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rfq.GetOrdersRequest} returns this
 */
proto.rfq.GetOrdersRequest.prototype.clearQuoteHashesList = function() {
  return this.setQuoteHashesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rfq.GetOrdersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.GetOrdersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.GetOrdersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.GetOrdersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetOrdersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    sdk_service_rfq_model_pb.UserOrder.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.GetOrdersResponse}
 */
proto.rfq.GetOrdersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.GetOrdersResponse;
  return proto.rfq.GetOrdersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.GetOrdersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.GetOrdersResponse}
 */
proto.rfq.GetOrdersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sdk_service_rfq_model_pb.UserOrder;
      reader.readMessage(value,sdk_service_rfq_model_pb.UserOrder.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.GetOrdersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.GetOrdersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.GetOrdersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetOrdersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      sdk_service_rfq_model_pb.UserOrder.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UserOrder orders = 1;
 * @return {!Array<!proto.rfq.UserOrder>}
 */
proto.rfq.GetOrdersResponse.prototype.getOrdersList = function() {
  return /** @type{!Array<!proto.rfq.UserOrder>} */ (
    jspb.Message.getRepeatedWrapperField(this, sdk_service_rfq_model_pb.UserOrder, 1));
};


/**
 * @param {!Array<!proto.rfq.UserOrder>} value
 * @return {!proto.rfq.GetOrdersResponse} returns this
*/
proto.rfq.GetOrdersResponse.prototype.setOrdersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.rfq.UserOrder=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rfq.UserOrder}
 */
proto.rfq.GetOrdersResponse.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rfq.UserOrder, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rfq.GetOrdersResponse} returns this
 */
proto.rfq.GetOrdersResponse.prototype.clearOrdersList = function() {
  return this.setOrdersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rfq.FilterOrdersRequest.repeatedFields_ = [5,6,7,8,9,10,11,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.FilterOrdersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.FilterOrdersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.FilterOrdersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.FilterOrdersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: jspb.Message.getFieldWithDefault(msg, 1, 0),
    endTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 4, 0),
    statusesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    mmIdsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    mmAddrsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    usrAddrsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    srcChainIdsList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    dstChainIdsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    srcTokenAddrsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    dstTokenAddrsList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.FilterOrdersRequest}
 */
proto.rfq.FilterOrdersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.FilterOrdersRequest;
  return proto.rfq.FilterOrdersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.FilterOrdersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.FilterOrdersRequest}
 */
proto.rfq.FilterOrdersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 5:
      var value = /** @type {!Array<!proto.rfq.OrderStatus>} */ (reader.readPackedEnum());
      msg.setStatusesList(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addMmIds(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addMmAddrs(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addUsrAddrs(value);
      break;
    case 9:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setSrcChainIdsList(value);
      break;
    case 10:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setDstChainIdsList(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addSrcTokenAddrs(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addDstTokenAddrs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.FilterOrdersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.FilterOrdersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.FilterOrdersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.FilterOrdersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEndTime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getStatusesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
  f = message.getMmIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getMmAddrsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getUsrAddrsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getSrcChainIdsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      9,
      f
    );
  }
  f = message.getDstChainIdsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      10,
      f
    );
  }
  f = message.getSrcTokenAddrsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getDstTokenAddrsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
};


/**
 * optional int64 start_time = 1;
 * @return {number}
 */
proto.rfq.FilterOrdersRequest.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 end_time = 2;
 * @return {number}
 */
proto.rfq.FilterOrdersRequest.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.setEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 limit = 3;
 * @return {number}
 */
proto.rfq.FilterOrdersRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 offset = 4;
 * @return {number}
 */
proto.rfq.FilterOrdersRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated OrderStatus statuses = 5;
 * @return {!Array<!proto.rfq.OrderStatus>}
 */
proto.rfq.FilterOrdersRequest.prototype.getStatusesList = function() {
  return /** @type {!Array<!proto.rfq.OrderStatus>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<!proto.rfq.OrderStatus>} value
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.setStatusesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.rfq.OrderStatus} value
 * @param {number=} opt_index
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.addStatuses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.clearStatusesList = function() {
  return this.setStatusesList([]);
};


/**
 * repeated string mm_ids = 6;
 * @return {!Array<string>}
 */
proto.rfq.FilterOrdersRequest.prototype.getMmIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.setMmIdsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.addMmIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.clearMmIdsList = function() {
  return this.setMmIdsList([]);
};


/**
 * repeated string mm_addrs = 7;
 * @return {!Array<string>}
 */
proto.rfq.FilterOrdersRequest.prototype.getMmAddrsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.setMmAddrsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.addMmAddrs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.clearMmAddrsList = function() {
  return this.setMmAddrsList([]);
};


/**
 * repeated string usr_addrs = 8;
 * @return {!Array<string>}
 */
proto.rfq.FilterOrdersRequest.prototype.getUsrAddrsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.setUsrAddrsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.addUsrAddrs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.clearUsrAddrsList = function() {
  return this.setUsrAddrsList([]);
};


/**
 * repeated int32 src_chain_ids = 9;
 * @return {!Array<number>}
 */
proto.rfq.FilterOrdersRequest.prototype.getSrcChainIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.setSrcChainIdsList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.addSrcChainIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.clearSrcChainIdsList = function() {
  return this.setSrcChainIdsList([]);
};


/**
 * repeated int32 dst_chain_ids = 10;
 * @return {!Array<number>}
 */
proto.rfq.FilterOrdersRequest.prototype.getDstChainIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.setDstChainIdsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.addDstChainIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.clearDstChainIdsList = function() {
  return this.setDstChainIdsList([]);
};


/**
 * repeated string src_token_addrs = 11;
 * @return {!Array<string>}
 */
proto.rfq.FilterOrdersRequest.prototype.getSrcTokenAddrsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.setSrcTokenAddrsList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.addSrcTokenAddrs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.clearSrcTokenAddrsList = function() {
  return this.setSrcTokenAddrsList([]);
};


/**
 * repeated string dst_token_addrs = 12;
 * @return {!Array<string>}
 */
proto.rfq.FilterOrdersRequest.prototype.getDstTokenAddrsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.setDstTokenAddrsList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.addDstTokenAddrs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rfq.FilterOrdersRequest} returns this
 */
proto.rfq.FilterOrdersRequest.prototype.clearDstTokenAddrsList = function() {
  return this.setDstTokenAddrsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rfq.FilterOrdersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.FilterOrdersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.FilterOrdersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.FilterOrdersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.FilterOrdersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    sdk_service_rfq_model_pb.UserOrder.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.FilterOrdersResponse}
 */
proto.rfq.FilterOrdersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.FilterOrdersResponse;
  return proto.rfq.FilterOrdersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.FilterOrdersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.FilterOrdersResponse}
 */
proto.rfq.FilterOrdersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sdk_service_rfq_model_pb.UserOrder;
      reader.readMessage(value,sdk_service_rfq_model_pb.UserOrder.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.FilterOrdersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.FilterOrdersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.FilterOrdersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.FilterOrdersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      sdk_service_rfq_model_pb.UserOrder.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UserOrder orders = 1;
 * @return {!Array<!proto.rfq.UserOrder>}
 */
proto.rfq.FilterOrdersResponse.prototype.getOrdersList = function() {
  return /** @type{!Array<!proto.rfq.UserOrder>} */ (
    jspb.Message.getRepeatedWrapperField(this, sdk_service_rfq_model_pb.UserOrder, 1));
};


/**
 * @param {!Array<!proto.rfq.UserOrder>} value
 * @return {!proto.rfq.FilterOrdersResponse} returns this
*/
proto.rfq.FilterOrdersResponse.prototype.setOrdersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.rfq.UserOrder=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rfq.UserOrder}
 */
proto.rfq.FilterOrdersResponse.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rfq.UserOrder, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rfq.FilterOrdersResponse} returns this
 */
proto.rfq.FilterOrdersResponse.prototype.clearOrdersList = function() {
  return this.setOrdersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.GetMarketMakersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.GetMarketMakersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.GetMarketMakersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetMarketMakersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.GetMarketMakersRequest}
 */
proto.rfq.GetMarketMakersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.GetMarketMakersRequest;
  return proto.rfq.GetMarketMakersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.GetMarketMakersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.GetMarketMakersRequest}
 */
proto.rfq.GetMarketMakersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.GetMarketMakersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.GetMarketMakersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.GetMarketMakersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetMarketMakersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rfq.GetMarketMakersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.GetMarketMakersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.GetMarketMakersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.GetMarketMakersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetMarketMakersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketMakersList: jspb.Message.toObjectList(msg.getMarketMakersList(),
    sdk_service_rfq_model_pb.MarketMaker.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.GetMarketMakersResponse}
 */
proto.rfq.GetMarketMakersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.GetMarketMakersResponse;
  return proto.rfq.GetMarketMakersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.GetMarketMakersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.GetMarketMakersResponse}
 */
proto.rfq.GetMarketMakersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new sdk_service_rfq_model_pb.MarketMaker;
      reader.readMessage(value,sdk_service_rfq_model_pb.MarketMaker.deserializeBinaryFromReader);
      msg.addMarketMakers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.GetMarketMakersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.GetMarketMakersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.GetMarketMakersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetMarketMakersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketMakersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      sdk_service_rfq_model_pb.MarketMaker.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MarketMaker market_makers = 1;
 * @return {!Array<!proto.rfq.MarketMaker>}
 */
proto.rfq.GetMarketMakersResponse.prototype.getMarketMakersList = function() {
  return /** @type{!Array<!proto.rfq.MarketMaker>} */ (
    jspb.Message.getRepeatedWrapperField(this, sdk_service_rfq_model_pb.MarketMaker, 1));
};


/**
 * @param {!Array<!proto.rfq.MarketMaker>} value
 * @return {!proto.rfq.GetMarketMakersResponse} returns this
*/
proto.rfq.GetMarketMakersResponse.prototype.setMarketMakersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.rfq.MarketMaker=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rfq.MarketMaker}
 */
proto.rfq.GetMarketMakersResponse.prototype.addMarketMakers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rfq.MarketMaker, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rfq.GetMarketMakersResponse} returns this
 */
proto.rfq.GetMarketMakersResponse.prototype.clearMarketMakersList = function() {
  return this.setMarketMakersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.GetRefundExecMsgCallDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.GetRefundExecMsgCallDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.GetRefundExecMsgCallDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetRefundExecMsgCallDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    quoteHash: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.GetRefundExecMsgCallDataRequest}
 */
proto.rfq.GetRefundExecMsgCallDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.GetRefundExecMsgCallDataRequest;
  return proto.rfq.GetRefundExecMsgCallDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.GetRefundExecMsgCallDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.GetRefundExecMsgCallDataRequest}
 */
proto.rfq.GetRefundExecMsgCallDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.GetRefundExecMsgCallDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.GetRefundExecMsgCallDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.GetRefundExecMsgCallDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetRefundExecMsgCallDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuoteHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string quote_hash = 1;
 * @return {string}
 */
proto.rfq.GetRefundExecMsgCallDataRequest.prototype.getQuoteHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rfq.GetRefundExecMsgCallDataRequest} returns this
 */
proto.rfq.GetRefundExecMsgCallDataRequest.prototype.setQuoteHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rfq.GetRefundExecMsgCallDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rfq.GetRefundExecMsgCallDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rfq.GetRefundExecMsgCallDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetRefundExecMsgCallDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    execMsgCallData: msg.getExecMsgCallData_asB64(),
    quote: (f = msg.getQuote()) && sdk_service_rfqmm_api_pb.Quote.toObject(includeInstance, f),
    srcNative: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rfq.GetRefundExecMsgCallDataResponse}
 */
proto.rfq.GetRefundExecMsgCallDataResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rfq.GetRefundExecMsgCallDataResponse;
  return proto.rfq.GetRefundExecMsgCallDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rfq.GetRefundExecMsgCallDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rfq.GetRefundExecMsgCallDataResponse}
 */
proto.rfq.GetRefundExecMsgCallDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setExecMsgCallData(value);
      break;
    case 2:
      var value = new sdk_service_rfqmm_api_pb.Quote;
      reader.readMessage(value,sdk_service_rfqmm_api_pb.Quote.deserializeBinaryFromReader);
      msg.setQuote(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSrcNative(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rfq.GetRefundExecMsgCallDataResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rfq.GetRefundExecMsgCallDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rfq.GetRefundExecMsgCallDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rfq.GetRefundExecMsgCallDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExecMsgCallData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getQuote();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      sdk_service_rfqmm_api_pb.Quote.serializeBinaryToWriter
    );
  }
  f = message.getSrcNative();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bytes exec_msg_call_data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.rfq.GetRefundExecMsgCallDataResponse.prototype.getExecMsgCallData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes exec_msg_call_data = 1;
 * This is a type-conversion wrapper around `getExecMsgCallData()`
 * @return {string}
 */
proto.rfq.GetRefundExecMsgCallDataResponse.prototype.getExecMsgCallData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getExecMsgCallData()));
};


/**
 * optional bytes exec_msg_call_data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getExecMsgCallData()`
 * @return {!Uint8Array}
 */
proto.rfq.GetRefundExecMsgCallDataResponse.prototype.getExecMsgCallData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getExecMsgCallData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.rfq.GetRefundExecMsgCallDataResponse} returns this
 */
proto.rfq.GetRefundExecMsgCallDataResponse.prototype.setExecMsgCallData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional service.rfqmm.Quote quote = 2;
 * @return {?proto.service.rfqmm.Quote}
 */
proto.rfq.GetRefundExecMsgCallDataResponse.prototype.getQuote = function() {
  return /** @type{?proto.service.rfqmm.Quote} */ (
    jspb.Message.getWrapperField(this, sdk_service_rfqmm_api_pb.Quote, 2));
};


/**
 * @param {?proto.service.rfqmm.Quote|undefined} value
 * @return {!proto.rfq.GetRefundExecMsgCallDataResponse} returns this
*/
proto.rfq.GetRefundExecMsgCallDataResponse.prototype.setQuote = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rfq.GetRefundExecMsgCallDataResponse} returns this
 */
proto.rfq.GetRefundExecMsgCallDataResponse.prototype.clearQuote = function() {
  return this.setQuote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rfq.GetRefundExecMsgCallDataResponse.prototype.hasQuote = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool src_native = 3;
 * @return {boolean}
 */
proto.rfq.GetRefundExecMsgCallDataResponse.prototype.getSrcNative = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.rfq.GetRefundExecMsgCallDataResponse} returns this
 */
proto.rfq.GetRefundExecMsgCallDataResponse.prototype.setSrcNative = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


goog.object.extend(exports, proto.rfq);
